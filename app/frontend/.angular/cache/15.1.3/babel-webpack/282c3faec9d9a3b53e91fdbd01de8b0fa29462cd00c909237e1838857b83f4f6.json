{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, PLATFORM_ID, Directive, Inject, Input, Optional, Self, SecurityContext, NgModule } from '@angular/core';\nimport * as i1 from '@angular/flex-layout/core';\nimport { StyleBuilder, BaseDirective2, SERVER_TOKEN, LAYOUT_CONFIG, CoreModule } from '@angular/flex-layout/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformServer, NgClass, NgStyle } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i2$1 from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url) {\n    return {\n      'content': url ? `url(${url})` : ''\n    };\n  }\n}\nImgSrcStyleBuilder.ɵfac = /* @__PURE__ */function () {\n  let ɵImgSrcStyleBuilder_BaseFactory;\n  return function ImgSrcStyleBuilder_Factory(t) {\n    return (ɵImgSrcStyleBuilder_BaseFactory || (ɵImgSrcStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(ImgSrcStyleBuilder)))(t || ImgSrcStyleBuilder);\n  };\n}();\nImgSrcStyleBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ImgSrcStyleBuilder,\n  factory: ImgSrcStyleBuilder.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImgSrcStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ImgSrcDirective extends BaseDirective2 {\n  constructor(elementRef, styleBuilder, styler, marshal, platformId, serverModuleLoaded) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.platformId = platformId;\n    this.serverModuleLoaded = serverModuleLoaded;\n    this.DIRECTIVE_KEY = 'img-src';\n    this.defaultSrc = '';\n    this.styleCache = imgSrcCache;\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n  set src(val) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  updateWithValue(value) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n}\nImgSrcDirective.ɵfac = function ImgSrcDirective_Factory(t) {\n  return new (t || ImgSrcDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ImgSrcStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(SERVER_TOKEN));\n};\nImgSrcDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ImgSrcDirective,\n  inputs: {\n    src: \"src\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImgSrcDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: ImgSrcStyleBuilder\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: i1.MediaMarshaller\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [SERVER_TOKEN]\n      }]\n    }];\n  }, {\n    src: [{\n      type: Input,\n      args: ['src']\n    }]\n  });\n})();\nconst imgSrcCache = new Map();\nconst inputs$3 = ['src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl', 'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl', 'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'];\nconst selector$3 = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\nclass DefaultImgSrcDirective extends ImgSrcDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$3;\n  }\n}\nDefaultImgSrcDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultImgSrcDirective_BaseFactory;\n  return function DefaultImgSrcDirective_Factory(t) {\n    return (ɵDefaultImgSrcDirective_BaseFactory || (ɵDefaultImgSrcDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultImgSrcDirective)))(t || DefaultImgSrcDirective);\n  };\n}();\nDefaultImgSrcDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultImgSrcDirective,\n  selectors: [[\"img\", \"src.xs\", \"\"], [\"img\", \"src.sm\", \"\"], [\"img\", \"src.md\", \"\"], [\"img\", \"src.lg\", \"\"], [\"img\", \"src.xl\", \"\"], [\"img\", \"src.lt-sm\", \"\"], [\"img\", \"src.lt-md\", \"\"], [\"img\", \"src.lt-lg\", \"\"], [\"img\", \"src.lt-xl\", \"\"], [\"img\", \"src.gt-xs\", \"\"], [\"img\", \"src.gt-sm\", \"\"], [\"img\", \"src.gt-md\", \"\"], [\"img\", \"src.gt-lg\", \"\"]],\n  inputs: {\n    \"src.xs\": \"src.xs\",\n    \"src.sm\": \"src.sm\",\n    \"src.md\": \"src.md\",\n    \"src.lg\": \"src.lg\",\n    \"src.xl\": \"src.xl\",\n    \"src.lt-sm\": \"src.lt-sm\",\n    \"src.lt-md\": \"src.lt-md\",\n    \"src.lt-lg\": \"src.lt-lg\",\n    \"src.lt-xl\": \"src.lt-xl\",\n    \"src.gt-xs\": \"src.gt-xs\",\n    \"src.gt-sm\": \"src.gt-sm\",\n    \"src.gt-md\": \"src.gt-md\",\n    \"src.gt-lg\": \"src.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultImgSrcDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$3,\n      inputs: inputs$3\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ClassDirective extends BaseDirective2 {\n  constructor(elementRef, styler, marshal, iterableDiffers, keyValueDiffers, renderer2, ngClassInstance) {\n    super(elementRef, null, styler, marshal);\n    this.ngClassInstance = ngClassInstance;\n    this.DIRECTIVE_KEY = 'ngClass';\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(iterableDiffers, keyValueDiffers, elementRef, renderer2);\n    }\n    this.init();\n    this.setValue('', '');\n  }\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  set klass(val) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n  updateWithValue(value) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\nClassDirective.ɵfac = function ClassDirective_Factory(t) {\n  return new (t || ClassDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(i0.KeyValueDiffers), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.NgClass, 10));\n};\nClassDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ClassDirective,\n  inputs: {\n    klass: [\"class\", \"klass\"]\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ClassDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: i1.MediaMarshaller\n    }, {\n      type: i0.IterableDiffers\n    }, {\n      type: i0.KeyValueDiffers\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i2.NgClass,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }];\n  }, {\n    klass: [{\n      type: Input,\n      args: ['class']\n    }]\n  });\n})();\nconst inputs$2 = ['ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl', 'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl', 'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'];\nconst selector$2 = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\nclass DefaultClassDirective extends ClassDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$2;\n  }\n}\nDefaultClassDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultClassDirective_BaseFactory;\n  return function DefaultClassDirective_Factory(t) {\n    return (ɵDefaultClassDirective_BaseFactory || (ɵDefaultClassDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultClassDirective)))(t || DefaultClassDirective);\n  };\n}();\nDefaultClassDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultClassDirective,\n  selectors: [[\"\", \"ngClass\", \"\"], [\"\", \"ngClass.xs\", \"\"], [\"\", \"ngClass.sm\", \"\"], [\"\", \"ngClass.md\", \"\"], [\"\", \"ngClass.lg\", \"\"], [\"\", \"ngClass.xl\", \"\"], [\"\", \"ngClass.lt-sm\", \"\"], [\"\", \"ngClass.lt-md\", \"\"], [\"\", \"ngClass.lt-lg\", \"\"], [\"\", \"ngClass.lt-xl\", \"\"], [\"\", \"ngClass.gt-xs\", \"\"], [\"\", \"ngClass.gt-sm\", \"\"], [\"\", \"ngClass.gt-md\", \"\"], [\"\", \"ngClass.gt-lg\", \"\"]],\n  inputs: {\n    ngClass: \"ngClass\",\n    \"ngClass.xs\": \"ngClass.xs\",\n    \"ngClass.sm\": \"ngClass.sm\",\n    \"ngClass.md\": \"ngClass.md\",\n    \"ngClass.lg\": \"ngClass.lg\",\n    \"ngClass.xl\": \"ngClass.xl\",\n    \"ngClass.lt-sm\": \"ngClass.lt-sm\",\n    \"ngClass.lt-md\": \"ngClass.lt-md\",\n    \"ngClass.lt-lg\": \"ngClass.lt-lg\",\n    \"ngClass.lt-xl\": \"ngClass.lt-xl\",\n    \"ngClass.gt-xs\": \"ngClass.gt-xs\",\n    \"ngClass.gt-sm\": \"ngClass.gt-sm\",\n    \"ngClass.gt-md\": \"ngClass.gt-md\",\n    \"ngClass.gt-lg\": \"ngClass.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultClassDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$2,\n      inputs: inputs$2\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show, parent) {\n    const shouldShow = show === 'true';\n    return {\n      'display': shouldShow ? parent.display || (parent.isServer ? 'initial' : '') : 'none'\n    };\n  }\n}\nShowHideStyleBuilder.ɵfac = /* @__PURE__ */function () {\n  let ɵShowHideStyleBuilder_BaseFactory;\n  return function ShowHideStyleBuilder_Factory(t) {\n    return (ɵShowHideStyleBuilder_BaseFactory || (ɵShowHideStyleBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(ShowHideStyleBuilder)))(t || ShowHideStyleBuilder);\n  };\n}();\nShowHideStyleBuilder.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ShowHideStyleBuilder,\n  factory: ShowHideStyleBuilder.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ShowHideStyleBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass ShowHideDirective extends BaseDirective2 {\n  constructor(elementRef, styleBuilder, styler, marshal, layoutConfig, platformId, serverModuleLoaded) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.layoutConfig = layoutConfig;\n    this.platformId = platformId;\n    this.serverModuleLoaded = serverModuleLoaded;\n    this.DIRECTIVE_KEY = 'show-hide';\n    /** Original DOM Element CSS display style */\n    this.display = '';\n    this.hasLayout = false;\n    this.hasFlexChild = false;\n  }\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i], 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement);\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ? inputValue !== 0 ? coerceBooleanProperty(inputValue) : false : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n  // *********************************************\n  // Protected methods\n  // *********************************************\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal.trackValue(this.nativeElement, key).pipe(takeUntil(this.destroySubject)).subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  getDisplayStyle() {\n    return this.hasLayout || this.hasFlexChild && this.layoutConfig.addFlexToParent ? 'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n  /** Validate the visibility value and then update the host's inline display style */\n  updateWithValue(value = true) {\n    if (value === '') {\n      return;\n    }\n    const isServer = isPlatformServer(this.platformId);\n    this.addStyles(value ? 'true' : 'false', {\n      display: this.display,\n      isServer\n    });\n    if (isServer && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement, 'layout-gap');\n  }\n}\nShowHideDirective.ɵfac = function ShowHideDirective_Factory(t) {\n  return new (t || ShowHideDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ShowHideStyleBuilder), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller), i0.ɵɵdirectiveInject(LAYOUT_CONFIG), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(SERVER_TOKEN));\n};\nShowHideDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ShowHideDirective,\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ShowHideDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: ShowHideStyleBuilder\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: i1.MediaMarshaller\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LAYOUT_CONFIG]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [SERVER_TOKEN]\n      }]\n    }];\n  }, null);\n})();\nconst DISPLAY_MAP = new WeakMap();\nconst inputs$1 = ['fxShow', 'fxShow.print', 'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl', 'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl', 'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg', 'fxHide', 'fxHide.print', 'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl', 'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl', 'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'];\nconst selector$1 = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n/**\n * 'show' Layout API directive\n */\nclass DefaultShowHideDirective extends ShowHideDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs$1;\n  }\n}\nDefaultShowHideDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultShowHideDirective_BaseFactory;\n  return function DefaultShowHideDirective_Factory(t) {\n    return (ɵDefaultShowHideDirective_BaseFactory || (ɵDefaultShowHideDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultShowHideDirective)))(t || DefaultShowHideDirective);\n  };\n}();\nDefaultShowHideDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultShowHideDirective,\n  selectors: [[\"\", \"fxShow\", \"\"], [\"\", \"fxShow.print\", \"\"], [\"\", \"fxShow.xs\", \"\"], [\"\", \"fxShow.sm\", \"\"], [\"\", \"fxShow.md\", \"\"], [\"\", \"fxShow.lg\", \"\"], [\"\", \"fxShow.xl\", \"\"], [\"\", \"fxShow.lt-sm\", \"\"], [\"\", \"fxShow.lt-md\", \"\"], [\"\", \"fxShow.lt-lg\", \"\"], [\"\", \"fxShow.lt-xl\", \"\"], [\"\", \"fxShow.gt-xs\", \"\"], [\"\", \"fxShow.gt-sm\", \"\"], [\"\", \"fxShow.gt-md\", \"\"], [\"\", \"fxShow.gt-lg\", \"\"], [\"\", \"fxHide\", \"\"], [\"\", \"fxHide.print\", \"\"], [\"\", \"fxHide.xs\", \"\"], [\"\", \"fxHide.sm\", \"\"], [\"\", \"fxHide.md\", \"\"], [\"\", \"fxHide.lg\", \"\"], [\"\", \"fxHide.xl\", \"\"], [\"\", \"fxHide.lt-sm\", \"\"], [\"\", \"fxHide.lt-md\", \"\"], [\"\", \"fxHide.lt-lg\", \"\"], [\"\", \"fxHide.lt-xl\", \"\"], [\"\", \"fxHide.gt-xs\", \"\"], [\"\", \"fxHide.gt-sm\", \"\"], [\"\", \"fxHide.gt-md\", \"\"], [\"\", \"fxHide.gt-lg\", \"\"]],\n  inputs: {\n    fxShow: \"fxShow\",\n    \"fxShow.print\": \"fxShow.print\",\n    \"fxShow.xs\": \"fxShow.xs\",\n    \"fxShow.sm\": \"fxShow.sm\",\n    \"fxShow.md\": \"fxShow.md\",\n    \"fxShow.lg\": \"fxShow.lg\",\n    \"fxShow.xl\": \"fxShow.xl\",\n    \"fxShow.lt-sm\": \"fxShow.lt-sm\",\n    \"fxShow.lt-md\": \"fxShow.lt-md\",\n    \"fxShow.lt-lg\": \"fxShow.lt-lg\",\n    \"fxShow.lt-xl\": \"fxShow.lt-xl\",\n    \"fxShow.gt-xs\": \"fxShow.gt-xs\",\n    \"fxShow.gt-sm\": \"fxShow.gt-sm\",\n    \"fxShow.gt-md\": \"fxShow.gt-md\",\n    \"fxShow.gt-lg\": \"fxShow.gt-lg\",\n    fxHide: \"fxHide\",\n    \"fxHide.print\": \"fxHide.print\",\n    \"fxHide.xs\": \"fxHide.xs\",\n    \"fxHide.sm\": \"fxHide.sm\",\n    \"fxHide.md\": \"fxHide.md\",\n    \"fxHide.lg\": \"fxHide.lg\",\n    \"fxHide.xl\": \"fxHide.xl\",\n    \"fxHide.lt-sm\": \"fxHide.lt-sm\",\n    \"fxHide.lt-md\": \"fxHide.lt-md\",\n    \"fxHide.lt-lg\": \"fxHide.lt-lg\",\n    \"fxHide.lt-xl\": \"fxHide.lt-xl\",\n    \"fxHide.gt-xs\": \"fxHide.gt-xs\",\n    \"fxHide.gt-sm\": \"fxHide.gt-sm\",\n    \"fxHide.gt-md\": \"fxHide.gt-md\",\n    \"fxHide.gt-lg\": \"fxHide.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultShowHideDirective, [{\n    type: Directive,\n    args: [{\n      selector: selector$1,\n      inputs: inputs$1\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** NgStyle allowed inputs */\nclass NgStyleKeyValue {\n  constructor(key, value, noQuotes = true) {\n    this.key = key;\n    this.value = value;\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\nfunction getType(target) {\n  let what = typeof target;\n  if (what === 'object') {\n    return target.constructor === Array ? 'array' : target.constructor === Set ? 'set' : 'object';\n  }\n  return what;\n}\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nfunction buildRawList(source, delimiter = ';') {\n  return String(source).trim().split(delimiter).map(val => val.trim()).filter(val => val !== '');\n}\n/** Convert array of key:value strings to a iterable map object */\nfunction buildMapFromList$1(styles, sanitize) {\n  const sanitizeValue = it => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n  return styles.map(stringToKeyValue).filter(entry => !!entry).map(sanitizeValue).reduce(keyValuesToMap, {});\n}\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nfunction buildMapFromSet(source, sanitize) {\n  let list = [];\n  if (getType(source) === 'set') {\n    source.forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach(key => {\n      list.push(`${key}:${source[key]}`);\n    });\n  }\n  return buildMapFromList$1(list, sanitize);\n}\n/** Convert 'key:value' -> [key, value] */\nfunction stringToKeyValue(it) {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n/** Convert [ [key,value] ] -> { key : value } */\nfunction keyValuesToMap(map, entry) {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass StyleDirective extends BaseDirective2 {\n  constructor(elementRef, styler, marshal, sanitizer, differs, renderer2, ngStyleInstance, serverLoaded, platformId) {\n    super(elementRef, null, styler, marshal);\n    this.sanitizer = sanitizer;\n    this.ngStyleInstance = ngStyleInstance;\n    this.DIRECTIVE_KEY = 'ngStyle';\n    if (!this.ngStyleInstance) {\n      // Create an instance NgStyle Directive instance only if `ngStyle=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(elementRef, differs, renderer2);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') ?? '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n  /** Add generated styles */\n  updateWithValue(value) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {\n      ...this.fallbackStyles,\n      ...styles\n    };\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n  /** Remove generated styles */\n  clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  buildStyleMap(styles) {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer = val => this.sanitizer.sanitize(SecurityContext.STYLE, val) ?? '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':\n          return buildMapFromList(buildRawList(styles), sanitizer);\n        case 'array':\n          return buildMapFromList(styles, sanitizer);\n        case 'set':\n          return buildMapFromSet(styles, sanitizer);\n        default:\n          return buildMapFromSet(styles, sanitizer);\n      }\n    }\n    return {};\n  }\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\nStyleDirective.ɵfac = function StyleDirective_Factory(t) {\n  return new (t || StyleDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.StyleUtils), i0.ɵɵdirectiveInject(i1.MediaMarshaller), i0.ɵɵdirectiveInject(i2$1.DomSanitizer), i0.ɵɵdirectiveInject(i0.KeyValueDiffers), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.NgStyle, 10), i0.ɵɵdirectiveInject(SERVER_TOKEN), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nStyleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: StyleDirective,\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StyleDirective, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.StyleUtils\n    }, {\n      type: i1.MediaMarshaller\n    }, {\n      type: i2$1.DomSanitizer\n    }, {\n      type: i0.KeyValueDiffers\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i2.NgStyle,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [SERVER_TOKEN]\n      }]\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\nconst inputs = ['ngStyle', 'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl', 'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl', 'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'];\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\nclass DefaultStyleDirective extends StyleDirective {\n  constructor() {\n    super(...arguments);\n    this.inputs = inputs;\n  }\n}\nDefaultStyleDirective.ɵfac = /* @__PURE__ */function () {\n  let ɵDefaultStyleDirective_BaseFactory;\n  return function DefaultStyleDirective_Factory(t) {\n    return (ɵDefaultStyleDirective_BaseFactory || (ɵDefaultStyleDirective_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultStyleDirective)))(t || DefaultStyleDirective);\n  };\n}();\nDefaultStyleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: DefaultStyleDirective,\n  selectors: [[\"\", \"ngStyle\", \"\"], [\"\", \"ngStyle.xs\", \"\"], [\"\", \"ngStyle.sm\", \"\"], [\"\", \"ngStyle.md\", \"\"], [\"\", \"ngStyle.lg\", \"\"], [\"\", \"ngStyle.xl\", \"\"], [\"\", \"ngStyle.lt-sm\", \"\"], [\"\", \"ngStyle.lt-md\", \"\"], [\"\", \"ngStyle.lt-lg\", \"\"], [\"\", \"ngStyle.lt-xl\", \"\"], [\"\", \"ngStyle.gt-xs\", \"\"], [\"\", \"ngStyle.gt-sm\", \"\"], [\"\", \"ngStyle.gt-md\", \"\"], [\"\", \"ngStyle.gt-lg\", \"\"]],\n  inputs: {\n    ngStyle: \"ngStyle\",\n    \"ngStyle.xs\": \"ngStyle.xs\",\n    \"ngStyle.sm\": \"ngStyle.sm\",\n    \"ngStyle.md\": \"ngStyle.md\",\n    \"ngStyle.lg\": \"ngStyle.lg\",\n    \"ngStyle.xl\": \"ngStyle.xl\",\n    \"ngStyle.lt-sm\": \"ngStyle.lt-sm\",\n    \"ngStyle.lt-md\": \"ngStyle.lt-md\",\n    \"ngStyle.lt-lg\": \"ngStyle.lt-lg\",\n    \"ngStyle.lt-xl\": \"ngStyle.lt-xl\",\n    \"ngStyle.gt-xs\": \"ngStyle.gt-xs\",\n    \"ngStyle.gt-sm\": \"ngStyle.gt-sm\",\n    \"ngStyle.gt-md\": \"ngStyle.gt-md\",\n    \"ngStyle.gt-lg\": \"ngStyle.gt-lg\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultStyleDirective, [{\n    type: Directive,\n    args: [{\n      selector,\n      inputs\n    }]\n  }], null, null);\n})();\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles, sanitize) {\n  const sanitizeValue = it => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n  return styles.map(stringToKeyValue).filter(entry => !!entry).map(sanitizeValue).reduce(keyValuesToMap, {});\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ALL_DIRECTIVES = [DefaultShowHideDirective, DefaultClassDirective, DefaultStyleDirective, DefaultImgSrcDirective];\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\nclass ExtendedModule {}\nExtendedModule.ɵfac = function ExtendedModule_Factory(t) {\n  return new (t || ExtendedModule)();\n};\nExtendedModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ExtendedModule\n});\nExtendedModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CoreModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ExtendedModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CoreModule],\n      declarations: [...ALL_DIRECTIVES],\n      exports: [...ALL_DIRECTIVES]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ClassDirective, DefaultClassDirective, DefaultImgSrcDirective, DefaultShowHideDirective, DefaultStyleDirective, ExtendedModule, ImgSrcDirective, ImgSrcStyleBuilder, ShowHideDirective, ShowHideStyleBuilder, StyleDirective };","map":{"version":3,"names":["i0","Injectable","PLATFORM_ID","Directive","Inject","Input","Optional","Self","SecurityContext","NgModule","i1","StyleBuilder","BaseDirective2","SERVER_TOKEN","LAYOUT_CONFIG","CoreModule","i2","isPlatformServer","NgClass","NgStyle","coerceBooleanProperty","takeUntil","i2$1","ImgSrcStyleBuilder","buildStyles","url","ɵfac","ɵprov","type","args","providedIn","ImgSrcDirective","constructor","elementRef","styleBuilder","styler","marshal","platformId","serverModuleLoaded","DIRECTIVE_KEY","defaultSrc","styleCache","imgSrcCache","init","setValue","nativeElement","getAttribute","setAttribute","src","val","updateWithValue","value","addStyles","ElementRef","StyleUtils","MediaMarshaller","ɵdir","Object","decorators","undefined","Map","inputs$3","selector$3","DefaultImgSrcDirective","arguments","inputs","selector","ClassDirective","iterableDiffers","keyValueDiffers","renderer2","ngClassInstance","klass","ngClass","ngDoCheck","IterableDiffers","KeyValueDiffers","Renderer2","inputs$2","selector$2","DefaultClassDirective","ShowHideStyleBuilder","show","parent","shouldShow","display","isServer","ShowHideDirective","layoutConfig","hasLayout","hasFlexChild","ngAfterViewInit","trackExtraTriggers","children","Array","from","i","length","hasValue","DISPLAY_MAP","has","get","getDisplayStyle","set","defaultValue","getValue","triggerUpdate","ngOnChanges","changes","keys","forEach","key","indexOf","inputKey","split","bp","slice","join","inputValue","currentValue","trackValue","pipe","destroySubject","subscribe","bind","addFlexToParent","lookupStyle","style","setProperty","parentElement","WeakMap","inputs$1","selector$1","DefaultShowHideDirective","NgStyleKeyValue","noQuotes","replace","trim","getType","target","what","Set","buildRawList","source","delimiter","String","map","filter","buildMapFromList$1","styles","sanitize","sanitizeValue","it","stringToKeyValue","entry","reduce","keyValuesToMap","buildMapFromSet","list","push","vals","StyleDirective","sanitizer","differs","ngStyleInstance","serverLoaded","fallbackStyles","buildStyleMap","ngStyle","applyStyleToElement","clearStyles","STYLE","buildMapFromList","DomSanitizer","DefaultStyleDirective","ALL_DIRECTIVES","ExtendedModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["/home/roiney/work/Pessoal-projects/GEW/app/frontend/node_modules/@angular/flex-layout/fesm2020/angular-flex-layout-extended.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, PLATFORM_ID, Directive, Inject, Input, Optional, Self, SecurityContext, NgModule } from '@angular/core';\nimport * as i1 from '@angular/flex-layout/core';\nimport { StyleBuilder, BaseDirective2, SERVER_TOKEN, LAYOUT_CONFIG, CoreModule } from '@angular/flex-layout/core';\nimport * as i2 from '@angular/common';\nimport { isPlatformServer, NgClass, NgStyle } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i2$1 from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ImgSrcStyleBuilder extends StyleBuilder {\n    buildStyles(url) {\n        return { 'content': url ? `url(${url})` : '' };\n    }\n}\nImgSrcStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ImgSrcStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nImgSrcStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ImgSrcStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ImgSrcStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass ImgSrcDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal, platformId, serverModuleLoaded) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.platformId = platformId;\n        this.serverModuleLoaded = serverModuleLoaded;\n        this.DIRECTIVE_KEY = 'img-src';\n        this.defaultSrc = '';\n        this.styleCache = imgSrcCache;\n        this.init();\n        this.setValue(this.nativeElement.getAttribute('src') || '', '');\n        if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n            this.nativeElement.setAttribute('src', '');\n        }\n    }\n    set src(val) {\n        this.defaultSrc = val;\n        this.setValue(this.defaultSrc, '');\n    }\n    /**\n     * Use the [responsively] activated input value to update\n     * the host img src attribute or assign a default `img.src=''`\n     * if the src has not been defined.\n     *\n     * Do nothing to standard `<img src=\"\">` usages, only when responsive\n     * keys are present do we actually call `setAttribute()`\n     */\n    updateWithValue(value) {\n        const url = value || this.defaultSrc;\n        if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n            this.addStyles(url);\n        }\n        else {\n            this.nativeElement.setAttribute('src', url);\n        }\n    }\n}\nImgSrcDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ImgSrcDirective, deps: [{ token: i0.ElementRef }, { token: ImgSrcStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: PLATFORM_ID }, { token: SERVER_TOKEN }], target: i0.ɵɵFactoryTarget.Directive });\nImgSrcDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: ImgSrcDirective, inputs: { src: \"src\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ImgSrcDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: ImgSrcStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }]; }, propDecorators: { src: [{\n                type: Input,\n                args: ['src']\n            }] } });\nconst imgSrcCache = new Map();\nconst inputs$3 = [\n    'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n    'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n    'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\nconst selector$3 = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\nclass DefaultImgSrcDirective extends ImgSrcDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$3;\n    }\n}\nDefaultImgSrcDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: DefaultImgSrcDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultImgSrcDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: DefaultImgSrcDirective, selector: \"\\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\\n\", inputs: { \"src.xs\": \"src.xs\", \"src.sm\": \"src.sm\", \"src.md\": \"src.md\", \"src.lg\": \"src.lg\", \"src.xl\": \"src.xl\", \"src.lt-sm\": \"src.lt-sm\", \"src.lt-md\": \"src.lt-md\", \"src.lt-lg\": \"src.lt-lg\", \"src.lt-xl\": \"src.lt-xl\", \"src.gt-xs\": \"src.gt-xs\", \"src.gt-sm\": \"src.gt-sm\", \"src.gt-md\": \"src.gt-md\", \"src.gt-lg\": \"src.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: DefaultImgSrcDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$3, inputs: inputs$3 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ClassDirective extends BaseDirective2 {\n    constructor(elementRef, styler, marshal, iterableDiffers, keyValueDiffers, renderer2, ngClassInstance) {\n        super(elementRef, null, styler, marshal);\n        this.ngClassInstance = ngClassInstance;\n        this.DIRECTIVE_KEY = 'ngClass';\n        if (!this.ngClassInstance) {\n            // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n            // the same host element; since the responsive variations may be defined...\n            this.ngClassInstance = new NgClass(iterableDiffers, keyValueDiffers, elementRef, renderer2);\n        }\n        this.init();\n        this.setValue('', '');\n    }\n    /**\n     * Capture class assignments so we cache the default classes\n     * which are merged with activated styles and used as fallbacks.\n     */\n    set klass(val) {\n        this.ngClassInstance.klass = val;\n        this.setValue(val, '');\n    }\n    updateWithValue(value) {\n        this.ngClassInstance.ngClass = value;\n        this.ngClassInstance.ngDoCheck();\n    }\n    // ******************************************************************\n    // Lifecycle Hooks\n    // ******************************************************************\n    /**\n     * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n     */\n    ngDoCheck() {\n        this.ngClassInstance.ngDoCheck();\n    }\n}\nClassDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ClassDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: i0.IterableDiffers }, { token: i0.KeyValueDiffers }, { token: i0.Renderer2 }, { token: i2.NgClass, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nClassDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: ClassDirective, inputs: { klass: [\"class\", \"klass\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ClassDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: i0.IterableDiffers }, { type: i0.KeyValueDiffers }, { type: i0.Renderer2 }, { type: i2.NgClass, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }]; }, propDecorators: { klass: [{\n                type: Input,\n                args: ['class']\n            }] } });\nconst inputs$2 = [\n    'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n    'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n    'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\nconst selector$2 = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\nclass DefaultClassDirective extends ClassDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$2;\n    }\n}\nDefaultClassDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: DefaultClassDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultClassDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: DefaultClassDirective, selector: \"\\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\\n\", inputs: { ngClass: \"ngClass\", \"ngClass.xs\": \"ngClass.xs\", \"ngClass.sm\": \"ngClass.sm\", \"ngClass.md\": \"ngClass.md\", \"ngClass.lg\": \"ngClass.lg\", \"ngClass.xl\": \"ngClass.xl\", \"ngClass.lt-sm\": \"ngClass.lt-sm\", \"ngClass.lt-md\": \"ngClass.lt-md\", \"ngClass.lt-lg\": \"ngClass.lt-lg\", \"ngClass.lt-xl\": \"ngClass.lt-xl\", \"ngClass.gt-xs\": \"ngClass.gt-xs\", \"ngClass.gt-sm\": \"ngClass.gt-sm\", \"ngClass.gt-md\": \"ngClass.gt-md\", \"ngClass.gt-lg\": \"ngClass.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: DefaultClassDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$2, inputs: inputs$2 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ShowHideStyleBuilder extends StyleBuilder {\n    buildStyles(show, parent) {\n        const shouldShow = show === 'true';\n        return { 'display': shouldShow ? parent.display || (parent.isServer ? 'initial' : '') : 'none' };\n    }\n}\nShowHideStyleBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ShowHideStyleBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nShowHideStyleBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ShowHideStyleBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ShowHideStyleBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\nclass ShowHideDirective extends BaseDirective2 {\n    constructor(elementRef, styleBuilder, styler, marshal, layoutConfig, platformId, serverModuleLoaded) {\n        super(elementRef, styleBuilder, styler, marshal);\n        this.layoutConfig = layoutConfig;\n        this.platformId = platformId;\n        this.serverModuleLoaded = serverModuleLoaded;\n        this.DIRECTIVE_KEY = 'show-hide';\n        /** Original DOM Element CSS display style */\n        this.display = '';\n        this.hasLayout = false;\n        this.hasFlexChild = false;\n    }\n    // *********************************************\n    // Lifecycle Methods\n    // *********************************************\n    ngAfterViewInit() {\n        this.trackExtraTriggers();\n        const children = Array.from(this.nativeElement.children);\n        for (let i = 0; i < children.length; i++) {\n            if (this.marshal.hasValue(children[i], 'flex')) {\n                this.hasFlexChild = true;\n                break;\n            }\n        }\n        if (DISPLAY_MAP.has(this.nativeElement)) {\n            this.display = DISPLAY_MAP.get(this.nativeElement);\n        }\n        else {\n            this.display = this.getDisplayStyle();\n            DISPLAY_MAP.set(this.nativeElement, this.display);\n        }\n        this.init();\n        // set the default to show unless explicitly overridden\n        const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n        if (defaultValue === undefined || defaultValue === '') {\n            this.setValue(true, '');\n        }\n        else {\n            this.triggerUpdate();\n        }\n    }\n    /**\n     * On changes to any @Input properties...\n     * Default to use the non-responsive Input value ('fxShow')\n     * Then conditionally override with the mq-activated Input's current value\n     */\n    ngOnChanges(changes) {\n        Object.keys(changes).forEach(key => {\n            if (this.inputs.indexOf(key) !== -1) {\n                const inputKey = key.split('.');\n                const bp = inputKey.slice(1).join('.');\n                const inputValue = changes[key].currentValue;\n                let shouldShow = inputValue !== '' ?\n                    inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n                    : true;\n                if (inputKey[0] === 'fxHide') {\n                    shouldShow = !shouldShow;\n                }\n                this.setValue(shouldShow, bp);\n            }\n        });\n    }\n    // *********************************************\n    // Protected methods\n    // *********************************************\n    /**\n     *  Watch for these extra triggers to update fxShow, fxHide stylings\n     */\n    trackExtraTriggers() {\n        this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n        ['layout', 'layout-align'].forEach(key => {\n            this.marshal\n                .trackValue(this.nativeElement, key)\n                .pipe(takeUntil(this.destroySubject))\n                .subscribe(this.triggerUpdate.bind(this));\n        });\n    }\n    /**\n     * Override accessor to the current HTMLElement's `display` style\n     * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n     * unless it was already explicitly specified inline or in a CSS stylesheet.\n     */\n    getDisplayStyle() {\n        return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n            'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n    }\n    /** Validate the visibility value and then update the host's inline display style */\n    updateWithValue(value = true) {\n        if (value === '') {\n            return;\n        }\n        const isServer = isPlatformServer(this.platformId);\n        this.addStyles(value ? 'true' : 'false', { display: this.display, isServer });\n        if (isServer && this.serverModuleLoaded) {\n            this.nativeElement.style.setProperty('display', '');\n        }\n        this.marshal.triggerUpdate(this.parentElement, 'layout-gap');\n    }\n}\nShowHideDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ShowHideDirective, deps: [{ token: i0.ElementRef }, { token: ShowHideStyleBuilder }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: LAYOUT_CONFIG }, { token: PLATFORM_ID }, { token: SERVER_TOKEN }], target: i0.ɵɵFactoryTarget.Directive });\nShowHideDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: ShowHideDirective, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ShowHideDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: ShowHideStyleBuilder }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LAYOUT_CONFIG]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }]; } });\nconst DISPLAY_MAP = new WeakMap();\nconst inputs$1 = [\n    'fxShow', 'fxShow.print',\n    'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n    'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n    'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n    'fxHide', 'fxHide.print',\n    'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n    'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n    'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\nconst selector$1 = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n/**\n * 'show' Layout API directive\n */\nclass DefaultShowHideDirective extends ShowHideDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs$1;\n    }\n}\nDefaultShowHideDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: DefaultShowHideDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultShowHideDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: DefaultShowHideDirective, selector: \"\\n  [fxShow], [fxShow.print],\\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\\n  [fxHide], [fxHide.print],\\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\\n\", inputs: { fxShow: \"fxShow\", \"fxShow.print\": \"fxShow.print\", \"fxShow.xs\": \"fxShow.xs\", \"fxShow.sm\": \"fxShow.sm\", \"fxShow.md\": \"fxShow.md\", \"fxShow.lg\": \"fxShow.lg\", \"fxShow.xl\": \"fxShow.xl\", \"fxShow.lt-sm\": \"fxShow.lt-sm\", \"fxShow.lt-md\": \"fxShow.lt-md\", \"fxShow.lt-lg\": \"fxShow.lt-lg\", \"fxShow.lt-xl\": \"fxShow.lt-xl\", \"fxShow.gt-xs\": \"fxShow.gt-xs\", \"fxShow.gt-sm\": \"fxShow.gt-sm\", \"fxShow.gt-md\": \"fxShow.gt-md\", \"fxShow.gt-lg\": \"fxShow.gt-lg\", fxHide: \"fxHide\", \"fxHide.print\": \"fxHide.print\", \"fxHide.xs\": \"fxHide.xs\", \"fxHide.sm\": \"fxHide.sm\", \"fxHide.md\": \"fxHide.md\", \"fxHide.lg\": \"fxHide.lg\", \"fxHide.xl\": \"fxHide.xl\", \"fxHide.lt-sm\": \"fxHide.lt-sm\", \"fxHide.lt-md\": \"fxHide.lt-md\", \"fxHide.lt-lg\": \"fxHide.lt-lg\", \"fxHide.lt-xl\": \"fxHide.lt-xl\", \"fxHide.gt-xs\": \"fxHide.gt-xs\", \"fxHide.gt-sm\": \"fxHide.gt-sm\", \"fxHide.gt-md\": \"fxHide.gt-md\", \"fxHide.gt-lg\": \"fxHide.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: DefaultShowHideDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: selector$1, inputs: inputs$1 }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** NgStyle allowed inputs */\nclass NgStyleKeyValue {\n    constructor(key, value, noQuotes = true) {\n        this.key = key;\n        this.value = value;\n        this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n        this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n        this.value = this.value.replace(/;/, '');\n    }\n}\nfunction getType(target) {\n    let what = typeof target;\n    if (what === 'object') {\n        return (target.constructor === Array) ? 'array' :\n            (target.constructor === Set) ? 'set' : 'object';\n    }\n    return what;\n}\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nfunction buildRawList(source, delimiter = ';') {\n    return String(source)\n        .trim()\n        .split(delimiter)\n        .map((val) => val.trim())\n        .filter(val => val !== '');\n}\n/** Convert array of key:value strings to a iterable map object */\nfunction buildMapFromList$1(styles, sanitize) {\n    const sanitizeValue = (it) => {\n        if (sanitize) {\n            it.value = sanitize(it.value);\n        }\n        return it;\n    };\n    return styles\n        .map(stringToKeyValue)\n        .filter(entry => !!entry)\n        .map(sanitizeValue)\n        .reduce(keyValuesToMap, {});\n}\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nfunction buildMapFromSet(source, sanitize) {\n    let list = [];\n    if (getType(source) === 'set') {\n        source.forEach(entry => list.push(entry));\n    }\n    else {\n        Object.keys(source).forEach((key) => {\n            list.push(`${key}:${source[key]}`);\n        });\n    }\n    return buildMapFromList$1(list, sanitize);\n}\n/** Convert 'key:value' -> [key, value] */\nfunction stringToKeyValue(it) {\n    const [key, ...vals] = it.split(':');\n    return new NgStyleKeyValue(key, vals.join(':'));\n}\n/** Convert [ [key,value] ] -> { key : value } */\nfunction keyValuesToMap(map, entry) {\n    if (!!entry.key) {\n        map[entry.key] = entry.value;\n    }\n    return map;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass StyleDirective extends BaseDirective2 {\n    constructor(elementRef, styler, marshal, sanitizer, differs, renderer2, ngStyleInstance, serverLoaded, platformId) {\n        super(elementRef, null, styler, marshal);\n        this.sanitizer = sanitizer;\n        this.ngStyleInstance = ngStyleInstance;\n        this.DIRECTIVE_KEY = 'ngStyle';\n        if (!this.ngStyleInstance) {\n            // Create an instance NgStyle Directive instance only if `ngStyle=\"\"` has NOT been\n            // defined on the same host element; since the responsive variations may be defined...\n            this.ngStyleInstance = new NgStyle(elementRef, differs, renderer2);\n        }\n        this.init();\n        const styles = this.nativeElement.getAttribute('style') ?? '';\n        this.fallbackStyles = this.buildStyleMap(styles);\n        this.isServer = serverLoaded && isPlatformServer(platformId);\n    }\n    /** Add generated styles */\n    updateWithValue(value) {\n        const styles = this.buildStyleMap(value);\n        this.ngStyleInstance.ngStyle = { ...this.fallbackStyles, ...styles };\n        if (this.isServer) {\n            this.applyStyleToElement(styles);\n        }\n        this.ngStyleInstance.ngDoCheck();\n    }\n    /** Remove generated styles */\n    clearStyles() {\n        this.ngStyleInstance.ngStyle = this.fallbackStyles;\n        this.ngStyleInstance.ngDoCheck();\n    }\n    /**\n     * Convert raw strings to ngStyleMap; which is required by ngStyle\n     * NOTE: Raw string key-value pairs MUST be delimited by `;`\n     *       Comma-delimiters are not supported due to complexities of\n     *       possible style values such as `rgba(x,x,x,x)` and others\n     */\n    buildStyleMap(styles) {\n        // Always safe-guard (aka sanitize) style property values\n        const sanitizer = (val) => this.sanitizer.sanitize(SecurityContext.STYLE, val) ?? '';\n        if (styles) {\n            switch (getType(styles)) {\n                case 'string': return buildMapFromList(buildRawList(styles), sanitizer);\n                case 'array': return buildMapFromList(styles, sanitizer);\n                case 'set': return buildMapFromSet(styles, sanitizer);\n                default: return buildMapFromSet(styles, sanitizer);\n            }\n        }\n        return {};\n    }\n    // ******************************************************************\n    // Lifecycle Hooks\n    // ******************************************************************\n    /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n    ngDoCheck() {\n        this.ngStyleInstance.ngDoCheck();\n    }\n}\nStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: StyleDirective, deps: [{ token: i0.ElementRef }, { token: i1.StyleUtils }, { token: i1.MediaMarshaller }, { token: i2$1.DomSanitizer }, { token: i0.KeyValueDiffers }, { token: i0.Renderer2 }, { token: i2.NgStyle, optional: true, self: true }, { token: SERVER_TOKEN }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Directive });\nStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: StyleDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: StyleDirective, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.StyleUtils }, { type: i1.MediaMarshaller }, { type: i2$1.DomSanitizer }, { type: i0.KeyValueDiffers }, { type: i0.Renderer2 }, { type: i2.NgStyle, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [SERVER_TOKEN]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\nconst inputs = [\n    'ngStyle',\n    'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n    'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n    'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\nclass DefaultStyleDirective extends StyleDirective {\n    constructor() {\n        super(...arguments);\n        this.inputs = inputs;\n    }\n}\nDefaultStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: DefaultStyleDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nDefaultStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: DefaultStyleDirective, selector: \"\\n  [ngStyle],\\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\\n\", inputs: { ngStyle: \"ngStyle\", \"ngStyle.xs\": \"ngStyle.xs\", \"ngStyle.sm\": \"ngStyle.sm\", \"ngStyle.md\": \"ngStyle.md\", \"ngStyle.lg\": \"ngStyle.lg\", \"ngStyle.xl\": \"ngStyle.xl\", \"ngStyle.lt-sm\": \"ngStyle.lt-sm\", \"ngStyle.lt-md\": \"ngStyle.lt-md\", \"ngStyle.lt-lg\": \"ngStyle.lt-lg\", \"ngStyle.lt-xl\": \"ngStyle.lt-xl\", \"ngStyle.gt-xs\": \"ngStyle.gt-xs\", \"ngStyle.gt-sm\": \"ngStyle.gt-sm\", \"ngStyle.gt-md\": \"ngStyle.gt-md\", \"ngStyle.gt-lg\": \"ngStyle.gt-lg\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: DefaultStyleDirective, decorators: [{\n            type: Directive,\n            args: [{ selector, inputs }]\n        }] });\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles, sanitize) {\n    const sanitizeValue = (it) => {\n        if (sanitize) {\n            it.value = sanitize(it.value);\n        }\n        return it;\n    };\n    return styles\n        .map(stringToKeyValue)\n        .filter(entry => !!entry)\n        .map(sanitizeValue)\n        .reduce(keyValuesToMap, {});\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ALL_DIRECTIVES = [\n    DefaultShowHideDirective,\n    DefaultClassDirective,\n    DefaultStyleDirective,\n    DefaultImgSrcDirective,\n];\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\nclass ExtendedModule {\n}\nExtendedModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ExtendedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nExtendedModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.2\", ngImport: i0, type: ExtendedModule, declarations: [DefaultShowHideDirective,\n        DefaultClassDirective,\n        DefaultStyleDirective,\n        DefaultImgSrcDirective], imports: [CoreModule], exports: [DefaultShowHideDirective,\n        DefaultClassDirective,\n        DefaultStyleDirective,\n        DefaultImgSrcDirective] });\nExtendedModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ExtendedModule, imports: [CoreModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: ExtendedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CoreModule],\n                    declarations: [...ALL_DIRECTIVES],\n                    exports: [...ALL_DIRECTIVES]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ClassDirective, DefaultClassDirective, DefaultImgSrcDirective, DefaultShowHideDirective, DefaultStyleDirective, ExtendedModule, ImgSrcDirective, ImgSrcStyleBuilder, ShowHideDirective, ShowHideStyleBuilder, StyleDirective };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,UAAU,EAAEC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,eAAe;AAC5H,OAAO,KAAKC,EAAE,MAAM,2BAA2B;AAC/C,SAASC,YAAY,EAAEC,cAAc,EAAEC,YAAY,EAAEC,aAAa,EAAEC,UAAU,QAAQ,2BAA2B;AACjH,OAAO,KAAKC,EAAE,MAAM,iBAAiB;AACrC,SAASC,gBAAgB,EAAEC,OAAO,EAAEC,OAAO,QAAQ,iBAAiB;AACpE,SAASC,qBAAqB,QAAQ,uBAAuB;AAC7D,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,OAAO,KAAKC,IAAI,MAAM,2BAA2B;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,SAASZ,YAAY,CAAC;EAC1Ca,WAAW,CAACC,GAAG,EAAE;IACb,OAAO;MAAE,SAAS,EAAEA,GAAG,GAAI,OAAMA,GAAI,GAAE,GAAG;IAAG,CAAC;EAClD;AACJ;AACAF,kBAAkB,CAACG,IAAI;EAAA;EAAA;IAAA,8EAA8E1B,EAAE,uBAAQuB,kBAAkB,SAAlBA,kBAAkB;EAAA;AAAA,GAAsD;AACvLA,kBAAkB,CAACI,KAAK,kBAD6E3B,EAAE;EAAA,OACYuB,kBAAkB;EAAA,SAAlBA,kBAAkB;EAAA,YAAc;AAAM,EAAG;AAC5J;EAAA,mDAFqGvB,EAAE,mBAEZuB,kBAAkB,EAAc,CAAC;IAChHK,IAAI,EAAE3B,UAAU;IAChB4B,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC;AAAA;AACV,MAAMC,eAAe,SAASnB,cAAc,CAAC;EACzCoB,WAAW,CAACC,UAAU,EAAEC,YAAY,EAAEC,MAAM,EAAEC,OAAO,EAAEC,UAAU,EAAEC,kBAAkB,EAAE;IACnF,KAAK,CAACL,UAAU,EAAEC,YAAY,EAAEC,MAAM,EAAEC,OAAO,CAAC;IAChD,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,aAAa,GAAG,SAAS;IAC9B,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,UAAU,GAAGC,WAAW;IAC7B,IAAI,CAACC,IAAI,EAAE;IACX,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACC,aAAa,CAACC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC;IAC/D,IAAI7B,gBAAgB,CAAC,IAAI,CAACoB,UAAU,CAAC,IAAI,IAAI,CAACC,kBAAkB,EAAE;MAC9D,IAAI,CAACO,aAAa,CAACE,YAAY,CAAC,KAAK,EAAE,EAAE,CAAC;IAC9C;EACJ;EACA,IAAIC,GAAG,CAACC,GAAG,EAAE;IACT,IAAI,CAACT,UAAU,GAAGS,GAAG;IACrB,IAAI,CAACL,QAAQ,CAAC,IAAI,CAACJ,UAAU,EAAE,EAAE,CAAC;EACtC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIU,eAAe,CAACC,KAAK,EAAE;IACnB,MAAM1B,GAAG,GAAG0B,KAAK,IAAI,IAAI,CAACX,UAAU;IACpC,IAAIvB,gBAAgB,CAAC,IAAI,CAACoB,UAAU,CAAC,IAAI,IAAI,CAACC,kBAAkB,EAAE;MAC9D,IAAI,CAACc,SAAS,CAAC3B,GAAG,CAAC;IACvB,CAAC,MACI;MACD,IAAI,CAACoB,aAAa,CAACE,YAAY,CAAC,KAAK,EAAEtB,GAAG,CAAC;IAC/C;EACJ;AACJ;AACAM,eAAe,CAACL,IAAI;EAAA,iBAAwFK,eAAe,EA1CtB/B,EAAE,mBA0CsCA,EAAE,CAACqD,UAAU,GA1CrDrD,EAAE,mBA0CgEuB,kBAAkB,GA1CpFvB,EAAE,mBA0C+FU,EAAE,CAAC4C,UAAU,GA1C9GtD,EAAE,mBA0CyHU,EAAE,CAAC6C,eAAe,GA1C7IvD,EAAE,mBA0CwJE,WAAW,GA1CrKF,EAAE,mBA0CgLa,YAAY;AAAA,CAA4C;AAC/UkB,eAAe,CAACyB,IAAI,kBA3CiFxD,EAAE;EAAA,MA2CP+B,eAAe;EAAA;IAAA;EAAA;EAAA,WA3CV/B,EAAE;AAAA,EA2CwE;AAC/K;EAAA,mDA5CqGA,EAAE,mBA4CZ+B,eAAe,EAAc,CAAC;IAC7GH,IAAI,EAAEzB;EACV,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEyB,IAAI,EAAE5B,EAAE,CAACqD;IAAW,CAAC,EAAE;MAAEzB,IAAI,EAAEL;IAAmB,CAAC,EAAE;MAAEK,IAAI,EAAElB,EAAE,CAAC4C;IAAW,CAAC,EAAE;MAAE1B,IAAI,EAAElB,EAAE,CAAC6C;IAAgB,CAAC,EAAE;MAAE3B,IAAI,EAAE6B,MAAM;MAAEC,UAAU,EAAE,CAAC;QACzK9B,IAAI,EAAExB,MAAM;QACZyB,IAAI,EAAE,CAAC3B,WAAW;MACtB,CAAC;IAAE,CAAC,EAAE;MAAE0B,IAAI,EAAE+B,SAAS;MAAED,UAAU,EAAE,CAAC;QAClC9B,IAAI,EAAExB,MAAM;QACZyB,IAAI,EAAE,CAAChB,YAAY;MACvB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEmC,GAAG,EAAE,CAAC;MAClCpB,IAAI,EAAEvB,KAAK;MACXwB,IAAI,EAAE,CAAC,KAAK;IAChB,CAAC;EAAE,CAAC;AAAA;AAChB,MAAMa,WAAW,GAAG,IAAIkB,GAAG,EAAE;AAC7B,MAAMC,QAAQ,GAAG,CACb,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAChD,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAClD,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,CACrD;AACD,MAAMC,UAAU,GAAI;AACpB;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,sBAAsB,SAAShC,eAAe,CAAC;EACjDC,WAAW,GAAG;IACV,KAAK,CAAC,GAAGgC,SAAS,CAAC;IACnB,IAAI,CAACC,MAAM,GAAGJ,QAAQ;EAC1B;AACJ;AACAE,sBAAsB,CAACrC,IAAI;EAAA;EAAA;IAAA,sFAlF0E1B,EAAE,uBAkFY+D,sBAAsB,SAAtBA,sBAAsB;EAAA;AAAA,GAAqD;AAC9LA,sBAAsB,CAACP,IAAI,kBAnF0ExD,EAAE;EAAA,MAmFA+D,sBAAsB;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAnFxB/D,EAAE;AAAA,EAmFkmB;AACzsB;EAAA,mDApFqGA,EAAE,mBAoFZ+D,sBAAsB,EAAc,CAAC;IACpHnC,IAAI,EAAEzB,SAAS;IACf0B,IAAI,EAAE,CAAC;MAAEqC,QAAQ,EAAEJ,UAAU;MAAEG,MAAM,EAAEJ;IAAS,CAAC;EACrD,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMM,cAAc,SAASvD,cAAc,CAAC;EACxCoB,WAAW,CAACC,UAAU,EAAEE,MAAM,EAAEC,OAAO,EAAEgC,eAAe,EAAEC,eAAe,EAAEC,SAAS,EAAEC,eAAe,EAAE;IACnG,KAAK,CAACtC,UAAU,EAAE,IAAI,EAAEE,MAAM,EAAEC,OAAO,CAAC;IACxC,IAAI,CAACmC,eAAe,GAAGA,eAAe;IACtC,IAAI,CAAChC,aAAa,GAAG,SAAS;IAC9B,IAAI,CAAC,IAAI,CAACgC,eAAe,EAAE;MACvB;MACA;MACA,IAAI,CAACA,eAAe,GAAG,IAAIrD,OAAO,CAACkD,eAAe,EAAEC,eAAe,EAAEpC,UAAU,EAAEqC,SAAS,CAAC;IAC/F;IACA,IAAI,CAAC3B,IAAI,EAAE;IACX,IAAI,CAACC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC;EACzB;EACA;AACJ;AACA;AACA;EACI,IAAI4B,KAAK,CAACvB,GAAG,EAAE;IACX,IAAI,CAACsB,eAAe,CAACC,KAAK,GAAGvB,GAAG;IAChC,IAAI,CAACL,QAAQ,CAACK,GAAG,EAAE,EAAE,CAAC;EAC1B;EACAC,eAAe,CAACC,KAAK,EAAE;IACnB,IAAI,CAACoB,eAAe,CAACE,OAAO,GAAGtB,KAAK;IACpC,IAAI,CAACoB,eAAe,CAACG,SAAS,EAAE;EACpC;EACA;EACA;EACA;EACA;AACJ;AACA;EACIA,SAAS,GAAG;IACR,IAAI,CAACH,eAAe,CAACG,SAAS,EAAE;EACpC;AACJ;AACAP,cAAc,CAACzC,IAAI;EAAA,iBAAwFyC,cAAc,EAnIpBnE,EAAE,mBAmIoCA,EAAE,CAACqD,UAAU,GAnInDrD,EAAE,mBAmI8DU,EAAE,CAAC4C,UAAU,GAnI7EtD,EAAE,mBAmIwFU,EAAE,CAAC6C,eAAe,GAnI5GvD,EAAE,mBAmIuHA,EAAE,CAAC2E,eAAe,GAnI3I3E,EAAE,mBAmIsJA,EAAE,CAAC4E,eAAe,GAnI1K5E,EAAE,mBAmIqLA,EAAE,CAAC6E,SAAS,GAnInM7E,EAAE,mBAmI8MgB,EAAE,CAACE,OAAO;AAAA,CAAwE;AACvYiD,cAAc,CAACX,IAAI,kBApIkFxD,EAAE;EAAA,MAoIRmE,cAAc;EAAA;IAAA;EAAA;EAAA,WApIRnE,EAAE;AAAA,EAoIqF;AAC5L;EAAA,mDArIqGA,EAAE,mBAqIZmE,cAAc,EAAc,CAAC;IAC5GvC,IAAI,EAAEzB;EACV,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEyB,IAAI,EAAE5B,EAAE,CAACqD;IAAW,CAAC,EAAE;MAAEzB,IAAI,EAAElB,EAAE,CAAC4C;IAAW,CAAC,EAAE;MAAE1B,IAAI,EAAElB,EAAE,CAAC6C;IAAgB,CAAC,EAAE;MAAE3B,IAAI,EAAE5B,EAAE,CAAC2E;IAAgB,CAAC,EAAE;MAAE/C,IAAI,EAAE5B,EAAE,CAAC4E;IAAgB,CAAC,EAAE;MAAEhD,IAAI,EAAE5B,EAAE,CAAC6E;IAAU,CAAC,EAAE;MAAEjD,IAAI,EAAEZ,EAAE,CAACE,OAAO;MAAEwC,UAAU,EAAE,CAAC;QACnO9B,IAAI,EAAEtB;MACV,CAAC,EAAE;QACCsB,IAAI,EAAErB;MACV,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEiE,KAAK,EAAE,CAAC;MACpC5C,IAAI,EAAEvB,KAAK;MACXwB,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC;EAAE,CAAC;AAAA;AAChB,MAAMiD,QAAQ,GAAG,CACb,SAAS,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAC/E,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,EAClE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,CACrE;AACD,MAAMC,UAAU,GAAI;AACpB;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,MAAMC,qBAAqB,SAASb,cAAc,CAAC;EAC/CnC,WAAW,GAAG;IACV,KAAK,CAAC,GAAGgC,SAAS,CAAC;IACnB,IAAI,CAACC,MAAM,GAAGa,QAAQ;EAC1B;AACJ;AACAE,qBAAqB,CAACtD,IAAI;EAAA;EAAA;IAAA,oFApK2E1B,EAAE,uBAoKWgF,qBAAqB,SAArBA,qBAAqB;EAAA;AAAA,GAAqD;AAC5LA,qBAAqB,CAACxB,IAAI,kBArK2ExD,EAAE;EAAA,MAqKDgF,qBAAqB;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WArKtBhF,EAAE;AAAA,EAqKyuB;AACh1B;EAAA,mDAtKqGA,EAAE,mBAsKZgF,qBAAqB,EAAc,CAAC;IACnHpD,IAAI,EAAEzB,SAAS;IACf0B,IAAI,EAAE,CAAC;MAAEqC,QAAQ,EAAEa,UAAU;MAAEd,MAAM,EAAEa;IAAS,CAAC;EACrD,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,oBAAoB,SAAStE,YAAY,CAAC;EAC5Ca,WAAW,CAAC0D,IAAI,EAAEC,MAAM,EAAE;IACtB,MAAMC,UAAU,GAAGF,IAAI,KAAK,MAAM;IAClC,OAAO;MAAE,SAAS,EAAEE,UAAU,GAAGD,MAAM,CAACE,OAAO,KAAKF,MAAM,CAACG,QAAQ,GAAG,SAAS,GAAG,EAAE,CAAC,GAAG;IAAO,CAAC;EACpG;AACJ;AACAL,oBAAoB,CAACvD,IAAI;EAAA;EAAA;IAAA,kFAxL4E1B,EAAE,uBAwLUiF,oBAAoB,SAApBA,oBAAoB;EAAA;AAAA,GAAsD;AAC3LA,oBAAoB,CAACtD,KAAK,kBAzL2E3B,EAAE;EAAA,OAyLciF,oBAAoB;EAAA,SAApBA,oBAAoB;EAAA,YAAc;AAAM,EAAG;AAChK;EAAA,mDA1LqGjF,EAAE,mBA0LZiF,oBAAoB,EAAc,CAAC;IAClHrD,IAAI,EAAE3B,UAAU;IAChB4B,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC;AAAA;AACV,MAAMyD,iBAAiB,SAAS3E,cAAc,CAAC;EAC3CoB,WAAW,CAACC,UAAU,EAAEC,YAAY,EAAEC,MAAM,EAAEC,OAAO,EAAEoD,YAAY,EAAEnD,UAAU,EAAEC,kBAAkB,EAAE;IACjG,KAAK,CAACL,UAAU,EAAEC,YAAY,EAAEC,MAAM,EAAEC,OAAO,CAAC;IAChD,IAAI,CAACoD,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACnD,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,aAAa,GAAG,WAAW;IAChC;IACA,IAAI,CAAC8C,OAAO,GAAG,EAAE;IACjB,IAAI,CAACI,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,YAAY,GAAG,KAAK;EAC7B;EACA;EACA;EACA;EACAC,eAAe,GAAG;IACd,IAAI,CAACC,kBAAkB,EAAE;IACzB,MAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAI,CAAClD,aAAa,CAACgD,QAAQ,CAAC;IACxD,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,IAAI,IAAI,CAAC5D,OAAO,CAAC8D,QAAQ,CAACL,QAAQ,CAACG,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE;QAC5C,IAAI,CAACN,YAAY,GAAG,IAAI;QACxB;MACJ;IACJ;IACA,IAAIS,WAAW,CAACC,GAAG,CAAC,IAAI,CAACvD,aAAa,CAAC,EAAE;MACrC,IAAI,CAACwC,OAAO,GAAGc,WAAW,CAACE,GAAG,CAAC,IAAI,CAACxD,aAAa,CAAC;IACtD,CAAC,MACI;MACD,IAAI,CAACwC,OAAO,GAAG,IAAI,CAACiB,eAAe,EAAE;MACrCH,WAAW,CAACI,GAAG,CAAC,IAAI,CAAC1D,aAAa,EAAE,IAAI,CAACwC,OAAO,CAAC;IACrD;IACA,IAAI,CAAC1C,IAAI,EAAE;IACX;IACA,MAAM6D,YAAY,GAAG,IAAI,CAACpE,OAAO,CAACqE,QAAQ,CAAC,IAAI,CAAC5D,aAAa,EAAE,IAAI,CAACN,aAAa,EAAE,EAAE,CAAC;IACtF,IAAIiE,YAAY,KAAK7C,SAAS,IAAI6C,YAAY,KAAK,EAAE,EAAE;MACnD,IAAI,CAAC5D,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC;IAC3B,CAAC,MACI;MACD,IAAI,CAAC8D,aAAa,EAAE;IACxB;EACJ;EACA;AACJ;AACA;AACA;AACA;EACIC,WAAW,CAACC,OAAO,EAAE;IACjBnD,MAAM,CAACoD,IAAI,CAACD,OAAO,CAAC,CAACE,OAAO,CAACC,GAAG,IAAI;MAChC,IAAI,IAAI,CAAC9C,MAAM,CAAC+C,OAAO,CAACD,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QACjC,MAAME,QAAQ,GAAGF,GAAG,CAACG,KAAK,CAAC,GAAG,CAAC;QAC/B,MAAMC,EAAE,GAAGF,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;QACtC,MAAMC,UAAU,GAAGV,OAAO,CAACG,GAAG,CAAC,CAACQ,YAAY;QAC5C,IAAInC,UAAU,GAAGkC,UAAU,KAAK,EAAE,GAC9BA,UAAU,KAAK,CAAC,GAAGlG,qBAAqB,CAACkG,UAAU,CAAC,GAAG,KAAK,GAC1D,IAAI;QACV,IAAIL,QAAQ,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;UAC1B7B,UAAU,GAAG,CAACA,UAAU;QAC5B;QACA,IAAI,CAACxC,QAAQ,CAACwC,UAAU,EAAE+B,EAAE,CAAC;MACjC;IACJ,CAAC,CAAC;EACN;EACA;EACA;EACA;EACA;AACJ;AACA;EACIvB,kBAAkB,GAAG;IACjB,IAAI,CAACH,SAAS,GAAG,IAAI,CAACrD,OAAO,CAAC8D,QAAQ,CAAC,IAAI,CAACrD,aAAa,EAAE,QAAQ,CAAC;IACpE,CAAC,QAAQ,EAAE,cAAc,CAAC,CAACiE,OAAO,CAACC,GAAG,IAAI;MACtC,IAAI,CAAC3E,OAAO,CACPoF,UAAU,CAAC,IAAI,CAAC3E,aAAa,EAAEkE,GAAG,CAAC,CACnCU,IAAI,CAACpG,SAAS,CAAC,IAAI,CAACqG,cAAc,CAAC,CAAC,CACpCC,SAAS,CAAC,IAAI,CAACjB,aAAa,CAACkB,IAAI,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;EACItB,eAAe,GAAG;IACd,OAAQ,IAAI,CAACb,SAAS,IAAK,IAAI,CAACC,YAAY,IAAI,IAAI,CAACF,YAAY,CAACqC,eAAgB,GAC9E,MAAM,GAAG,IAAI,CAAC1F,MAAM,CAAC2F,WAAW,CAAC,IAAI,CAACjF,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC;EAC7E;EACA;EACAK,eAAe,CAACC,KAAK,GAAG,IAAI,EAAE;IAC1B,IAAIA,KAAK,KAAK,EAAE,EAAE;MACd;IACJ;IACA,MAAMmC,QAAQ,GAAGrE,gBAAgB,CAAC,IAAI,CAACoB,UAAU,CAAC;IAClD,IAAI,CAACe,SAAS,CAACD,KAAK,GAAG,MAAM,GAAG,OAAO,EAAE;MAAEkC,OAAO,EAAE,IAAI,CAACA,OAAO;MAAEC;IAAS,CAAC,CAAC;IAC7E,IAAIA,QAAQ,IAAI,IAAI,CAAChD,kBAAkB,EAAE;MACrC,IAAI,CAACO,aAAa,CAACkF,KAAK,CAACC,WAAW,CAAC,SAAS,EAAE,EAAE,CAAC;IACvD;IACA,IAAI,CAAC5F,OAAO,CAACsE,aAAa,CAAC,IAAI,CAACuB,aAAa,EAAE,YAAY,CAAC;EAChE;AACJ;AACA1C,iBAAiB,CAAC7D,IAAI;EAAA,iBAAwF6D,iBAAiB,EAjS1BvF,EAAE,mBAiS0CA,EAAE,CAACqD,UAAU,GAjSzDrD,EAAE,mBAiSoEiF,oBAAoB,GAjS1FjF,EAAE,mBAiSqGU,EAAE,CAAC4C,UAAU,GAjSpHtD,EAAE,mBAiS+HU,EAAE,CAAC6C,eAAe,GAjSnJvD,EAAE,mBAiS8Jc,aAAa,GAjS7Kd,EAAE,mBAiSwLE,WAAW,GAjSrMF,EAAE,mBAiSgNa,YAAY;AAAA,CAA4C;AAC/W0E,iBAAiB,CAAC/B,IAAI,kBAlS+ExD,EAAE;EAAA,MAkSLuF,iBAAiB;EAAA,WAlSdvF,EAAE,6BAAFA,EAAE;AAAA,EAkSyE;AAChL;EAAA,mDAnSqGA,EAAE,mBAmSZuF,iBAAiB,EAAc,CAAC;IAC/G3D,IAAI,EAAEzB;EACV,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEyB,IAAI,EAAE5B,EAAE,CAACqD;IAAW,CAAC,EAAE;MAAEzB,IAAI,EAAEqD;IAAqB,CAAC,EAAE;MAAErD,IAAI,EAAElB,EAAE,CAAC4C;IAAW,CAAC,EAAE;MAAE1B,IAAI,EAAElB,EAAE,CAAC6C;IAAgB,CAAC,EAAE;MAAE3B,IAAI,EAAE+B,SAAS;MAAED,UAAU,EAAE,CAAC;QAC9K9B,IAAI,EAAExB,MAAM;QACZyB,IAAI,EAAE,CAACf,aAAa;MACxB,CAAC;IAAE,CAAC,EAAE;MAAEc,IAAI,EAAE6B,MAAM;MAAEC,UAAU,EAAE,CAAC;QAC/B9B,IAAI,EAAExB,MAAM;QACZyB,IAAI,EAAE,CAAC3B,WAAW;MACtB,CAAC;IAAE,CAAC,EAAE;MAAE0B,IAAI,EAAE+B,SAAS;MAAED,UAAU,EAAE,CAAC;QAClC9B,IAAI,EAAExB,MAAM;QACZyB,IAAI,EAAE,CAAChB,YAAY;MACvB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AAAA;AACxB,MAAMsF,WAAW,GAAG,IAAI+B,OAAO,EAAE;AACjC,MAAMC,QAAQ,GAAG,CACb,QAAQ,EAAE,cAAc,EACxB,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAC/D,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAC9D,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAC9D,QAAQ,EAAE,cAAc,EACxB,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAC/D,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,EAC9D,cAAc,EAAE,cAAc,EAAE,cAAc,EAAE,cAAc,CACjE;AACD,MAAMC,UAAU,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,MAAMC,wBAAwB,SAAS9C,iBAAiB,CAAC;EACrDvD,WAAW,GAAG;IACV,KAAK,CAAC,GAAGgC,SAAS,CAAC;IACnB,IAAI,CAACC,MAAM,GAAGkE,QAAQ;EAC1B;AACJ;AACAE,wBAAwB,CAAC3G,IAAI;EAAA;EAAA;IAAA,0FA7UwE1B,EAAE,uBA6UcqI,wBAAwB,SAAxBA,wBAAwB;EAAA;AAAA,GAAqD;AAClMA,wBAAwB,CAAC7E,IAAI,kBA9UwExD,EAAE;EAAA,MA8UEqI,wBAAwB;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WA9U5BrI,EAAE;AAAA,EA8Um5C;AAC1/C;EAAA,mDA/UqGA,EAAE,mBA+UZqI,wBAAwB,EAAc,CAAC;IACtHzG,IAAI,EAAEzB,SAAS;IACf0B,IAAI,EAAE,CAAC;MAAEqC,QAAQ,EAAEkE,UAAU;MAAEnE,MAAM,EAAEkE;IAAS,CAAC;EACrD,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,eAAe,CAAC;EAClBtG,WAAW,CAAC+E,GAAG,EAAE5D,KAAK,EAAEoF,QAAQ,GAAG,IAAI,EAAE;IACrC,IAAI,CAACxB,GAAG,GAAGA,GAAG;IACd,IAAI,CAAC5D,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC4D,GAAG,GAAGwB,QAAQ,GAAGxB,GAAG,CAACyB,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAACC,IAAI,EAAE,GAAG1B,GAAG,CAAC0B,IAAI,EAAE;IAClE,IAAI,CAACtF,KAAK,GAAGoF,QAAQ,GAAGpF,KAAK,CAACqF,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAACC,IAAI,EAAE,GAAGtF,KAAK,CAACsF,IAAI,EAAE;IACxE,IAAI,CAACtF,KAAK,GAAG,IAAI,CAACA,KAAK,CAACqF,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;EAC5C;AACJ;AACA,SAASE,OAAO,CAACC,MAAM,EAAE;EACrB,IAAIC,IAAI,GAAG,OAAOD,MAAM;EACxB,IAAIC,IAAI,KAAK,QAAQ,EAAE;IACnB,OAAQD,MAAM,CAAC3G,WAAW,KAAK8D,KAAK,GAAI,OAAO,GAC1C6C,MAAM,CAAC3G,WAAW,KAAK6G,GAAG,GAAI,KAAK,GAAG,QAAQ;EACvD;EACA,OAAOD,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,SAASE,YAAY,CAACC,MAAM,EAAEC,SAAS,GAAG,GAAG,EAAE;EAC3C,OAAOC,MAAM,CAACF,MAAM,CAAC,CAChBN,IAAI,EAAE,CACNvB,KAAK,CAAC8B,SAAS,CAAC,CAChBE,GAAG,CAAEjG,GAAG,IAAKA,GAAG,CAACwF,IAAI,EAAE,CAAC,CACxBU,MAAM,CAAClG,GAAG,IAAIA,GAAG,KAAK,EAAE,CAAC;AAClC;AACA;AACA,SAASmG,kBAAkB,CAACC,MAAM,EAAEC,QAAQ,EAAE;EAC1C,MAAMC,aAAa,GAAIC,EAAE,IAAK;IAC1B,IAAIF,QAAQ,EAAE;MACVE,EAAE,CAACrG,KAAK,GAAGmG,QAAQ,CAACE,EAAE,CAACrG,KAAK,CAAC;IACjC;IACA,OAAOqG,EAAE;EACb,CAAC;EACD,OAAOH,MAAM,CACRH,GAAG,CAACO,gBAAgB,CAAC,CACrBN,MAAM,CAACO,KAAK,IAAI,CAAC,CAACA,KAAK,CAAC,CACxBR,GAAG,CAACK,aAAa,CAAC,CAClBI,MAAM,CAACC,cAAc,EAAE,CAAC,CAAC,CAAC;AACnC;AACA;AACA,SAASC,eAAe,CAACd,MAAM,EAAEO,QAAQ,EAAE;EACvC,IAAIQ,IAAI,GAAG,EAAE;EACb,IAAIpB,OAAO,CAACK,MAAM,CAAC,KAAK,KAAK,EAAE;IAC3BA,MAAM,CAACjC,OAAO,CAAC4C,KAAK,IAAII,IAAI,CAACC,IAAI,CAACL,KAAK,CAAC,CAAC;EAC7C,CAAC,MACI;IACDjG,MAAM,CAACoD,IAAI,CAACkC,MAAM,CAAC,CAACjC,OAAO,CAAEC,GAAG,IAAK;MACjC+C,IAAI,CAACC,IAAI,CAAE,GAAEhD,GAAI,IAAGgC,MAAM,CAAChC,GAAG,CAAE,EAAC,CAAC;IACtC,CAAC,CAAC;EACN;EACA,OAAOqC,kBAAkB,CAACU,IAAI,EAAER,QAAQ,CAAC;AAC7C;AACA;AACA,SAASG,gBAAgB,CAACD,EAAE,EAAE;EAC1B,MAAM,CAACzC,GAAG,EAAE,GAAGiD,IAAI,CAAC,GAAGR,EAAE,CAACtC,KAAK,CAAC,GAAG,CAAC;EACpC,OAAO,IAAIoB,eAAe,CAACvB,GAAG,EAAEiD,IAAI,CAAC3C,IAAI,CAAC,GAAG,CAAC,CAAC;AACnD;AACA;AACA,SAASuC,cAAc,CAACV,GAAG,EAAEQ,KAAK,EAAE;EAChC,IAAI,CAAC,CAACA,KAAK,CAAC3C,GAAG,EAAE;IACbmC,GAAG,CAACQ,KAAK,CAAC3C,GAAG,CAAC,GAAG2C,KAAK,CAACvG,KAAK;EAChC;EACA,OAAO+F,GAAG;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMe,cAAc,SAASrJ,cAAc,CAAC;EACxCoB,WAAW,CAACC,UAAU,EAAEE,MAAM,EAAEC,OAAO,EAAE8H,SAAS,EAAEC,OAAO,EAAE7F,SAAS,EAAE8F,eAAe,EAAEC,YAAY,EAAEhI,UAAU,EAAE;IAC/G,KAAK,CAACJ,UAAU,EAAE,IAAI,EAAEE,MAAM,EAAEC,OAAO,CAAC;IACxC,IAAI,CAAC8H,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACE,eAAe,GAAGA,eAAe;IACtC,IAAI,CAAC7H,aAAa,GAAG,SAAS;IAC9B,IAAI,CAAC,IAAI,CAAC6H,eAAe,EAAE;MACvB;MACA;MACA,IAAI,CAACA,eAAe,GAAG,IAAIjJ,OAAO,CAACc,UAAU,EAAEkI,OAAO,EAAE7F,SAAS,CAAC;IACtE;IACA,IAAI,CAAC3B,IAAI,EAAE;IACX,MAAM0G,MAAM,GAAG,IAAI,CAACxG,aAAa,CAACC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE;IAC7D,IAAI,CAACwH,cAAc,GAAG,IAAI,CAACC,aAAa,CAAClB,MAAM,CAAC;IAChD,IAAI,CAAC/D,QAAQ,GAAG+E,YAAY,IAAIpJ,gBAAgB,CAACoB,UAAU,CAAC;EAChE;EACA;EACAa,eAAe,CAACC,KAAK,EAAE;IACnB,MAAMkG,MAAM,GAAG,IAAI,CAACkB,aAAa,CAACpH,KAAK,CAAC;IACxC,IAAI,CAACiH,eAAe,CAACI,OAAO,GAAG;MAAE,GAAG,IAAI,CAACF,cAAc;MAAE,GAAGjB;IAAO,CAAC;IACpE,IAAI,IAAI,CAAC/D,QAAQ,EAAE;MACf,IAAI,CAACmF,mBAAmB,CAACpB,MAAM,CAAC;IACpC;IACA,IAAI,CAACe,eAAe,CAAC1F,SAAS,EAAE;EACpC;EACA;EACAgG,WAAW,GAAG;IACV,IAAI,CAACN,eAAe,CAACI,OAAO,GAAG,IAAI,CAACF,cAAc;IAClD,IAAI,CAACF,eAAe,CAAC1F,SAAS,EAAE;EACpC;EACA;AACJ;AACA;AACA;AACA;AACA;EACI6F,aAAa,CAAClB,MAAM,EAAE;IAClB;IACA,MAAMa,SAAS,GAAIjH,GAAG,IAAK,IAAI,CAACiH,SAAS,CAACZ,QAAQ,CAAC9I,eAAe,CAACmK,KAAK,EAAE1H,GAAG,CAAC,IAAI,EAAE;IACpF,IAAIoG,MAAM,EAAE;MACR,QAAQX,OAAO,CAACW,MAAM,CAAC;QACnB,KAAK,QAAQ;UAAE,OAAOuB,gBAAgB,CAAC9B,YAAY,CAACO,MAAM,CAAC,EAAEa,SAAS,CAAC;QACvE,KAAK,OAAO;UAAE,OAAOU,gBAAgB,CAACvB,MAAM,EAAEa,SAAS,CAAC;QACxD,KAAK,KAAK;UAAE,OAAOL,eAAe,CAACR,MAAM,EAAEa,SAAS,CAAC;QACrD;UAAS,OAAOL,eAAe,CAACR,MAAM,EAAEa,SAAS,CAAC;MAAC;IAE3D;IACA,OAAO,CAAC,CAAC;EACb;EACA;EACA;EACA;EACA;EACAxF,SAAS,GAAG;IACR,IAAI,CAAC0F,eAAe,CAAC1F,SAAS,EAAE;EACpC;AACJ;AACAuF,cAAc,CAACvI,IAAI;EAAA,iBAAwFuI,cAAc,EAhepBjK,EAAE,mBAgeoCA,EAAE,CAACqD,UAAU,GAhenDrD,EAAE,mBAge8DU,EAAE,CAAC4C,UAAU,GAhe7EtD,EAAE,mBAgewFU,EAAE,CAAC6C,eAAe,GAhe5GvD,EAAE,mBAgeuHsB,IAAI,CAACuJ,YAAY,GAhe1I7K,EAAE,mBAgeqJA,EAAE,CAAC4E,eAAe,GAhezK5E,EAAE,mBAgeoLA,EAAE,CAAC6E,SAAS,GAhelM7E,EAAE,mBAge6MgB,EAAE,CAACG,OAAO,OAhezNnB,EAAE,mBAgegQa,YAAY,GAhe9Qb,EAAE,mBAgeyRE,WAAW;AAAA,CAA4C;AACvb+J,cAAc,CAACzG,IAAI,kBAjekFxD,EAAE;EAAA,MAieRiK,cAAc;EAAA,WAjeRjK,EAAE;AAAA,EAie8C;AACrJ;EAAA,mDAleqGA,EAAE,mBAkeZiK,cAAc,EAAc,CAAC;IAC5GrI,IAAI,EAAEzB;EACV,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEyB,IAAI,EAAE5B,EAAE,CAACqD;IAAW,CAAC,EAAE;MAAEzB,IAAI,EAAElB,EAAE,CAAC4C;IAAW,CAAC,EAAE;MAAE1B,IAAI,EAAElB,EAAE,CAAC6C;IAAgB,CAAC,EAAE;MAAE3B,IAAI,EAAEN,IAAI,CAACuJ;IAAa,CAAC,EAAE;MAAEjJ,IAAI,EAAE5B,EAAE,CAAC4E;IAAgB,CAAC,EAAE;MAAEhD,IAAI,EAAE5B,EAAE,CAAC6E;IAAU,CAAC,EAAE;MAAEjD,IAAI,EAAEZ,EAAE,CAACG,OAAO;MAAEuC,UAAU,EAAE,CAAC;QAClO9B,IAAI,EAAEtB;MACV,CAAC,EAAE;QACCsB,IAAI,EAAErB;MACV,CAAC;IAAE,CAAC,EAAE;MAAEqB,IAAI,EAAE+B,SAAS;MAAED,UAAU,EAAE,CAAC;QAClC9B,IAAI,EAAExB,MAAM;QACZyB,IAAI,EAAE,CAAChB,YAAY;MACvB,CAAC;IAAE,CAAC,EAAE;MAAEe,IAAI,EAAE6B,MAAM;MAAEC,UAAU,EAAE,CAAC;QAC/B9B,IAAI,EAAExB,MAAM;QACZyB,IAAI,EAAE,CAAC3B,WAAW;MACtB,CAAC;IAAE,CAAC,CAAC;EAAE,CAAC;AAAA;AACxB,MAAM+D,MAAM,GAAG,CACX,SAAS,EACT,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EACpE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,EAClE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,CACrE;AACD,MAAMC,QAAQ,GAAI;AAClB;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,MAAM4G,qBAAqB,SAASb,cAAc,CAAC;EAC/CjI,WAAW,GAAG;IACV,KAAK,CAAC,GAAGgC,SAAS,CAAC;IACnB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;AACJ;AACA6G,qBAAqB,CAACpJ,IAAI;EAAA;EAAA;IAAA,oFArgB2E1B,EAAE,uBAqgBW8K,qBAAqB,SAArBA,qBAAqB;EAAA;AAAA,GAAqD;AAC5LA,qBAAqB,CAACtH,IAAI,kBAtgB2ExD,EAAE;EAAA,MAsgBD8K,qBAAqB;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAtgBtB9K,EAAE;AAAA,EAsgB4uB;AACn1B;EAAA,mDAvgBqGA,EAAE,mBAugBZ8K,qBAAqB,EAAc,CAAC;IACnHlJ,IAAI,EAAEzB,SAAS;IACf0B,IAAI,EAAE,CAAC;MAAEqC,QAAQ;MAAED;IAAO,CAAC;EAC/B,CAAC,CAAC;AAAA;AACV;AACA,SAAS2G,gBAAgB,CAACvB,MAAM,EAAEC,QAAQ,EAAE;EACxC,MAAMC,aAAa,GAAIC,EAAE,IAAK;IAC1B,IAAIF,QAAQ,EAAE;MACVE,EAAE,CAACrG,KAAK,GAAGmG,QAAQ,CAACE,EAAE,CAACrG,KAAK,CAAC;IACjC;IACA,OAAOqG,EAAE;EACb,CAAC;EACD,OAAOH,MAAM,CACRH,GAAG,CAACO,gBAAgB,CAAC,CACrBN,MAAM,CAACO,KAAK,IAAI,CAAC,CAACA,KAAK,CAAC,CACxBR,GAAG,CAACK,aAAa,CAAC,CAClBI,MAAM,CAACC,cAAc,EAAE,CAAC,CAAC,CAAC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMmB,cAAc,GAAG,CACnB1C,wBAAwB,EACxBrD,qBAAqB,EACrB8F,qBAAqB,EACrB/G,sBAAsB,CACzB;AACD;AACA;AACA;AACA;AACA;AACA,MAAMiH,cAAc,CAAC;AAErBA,cAAc,CAACtJ,IAAI;EAAA,iBAAwFsJ,cAAc;AAAA,CAAkD;AAC3KA,cAAc,CAACC,IAAI,kBA/iBkFjL,EAAE;EAAA,MA+iBKgL;AAAc,EAMxF;AAClCA,cAAc,CAACE,IAAI,kBAtjBkFlL,EAAE;EAAA,UAsjB+Be,UAAU;AAAA,EAAI;AACpJ;EAAA,mDAvjBqGf,EAAE,mBAujBZgL,cAAc,EAAc,CAAC;IAC5GpJ,IAAI,EAAEnB,QAAQ;IACdoB,IAAI,EAAE,CAAC;MACCsJ,OAAO,EAAE,CAACpK,UAAU,CAAC;MACrBqK,YAAY,EAAE,CAAC,GAAGL,cAAc,CAAC;MACjCM,OAAO,EAAE,CAAC,GAAGN,cAAc;IAC/B,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS5G,cAAc,EAAEa,qBAAqB,EAAEjB,sBAAsB,EAAEsE,wBAAwB,EAAEyC,qBAAqB,EAAEE,cAAc,EAAEjJ,eAAe,EAAER,kBAAkB,EAAEgE,iBAAiB,EAAEN,oBAAoB,EAAEgF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}