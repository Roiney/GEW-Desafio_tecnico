{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { CustomValidators } from '../costum-validator';\nlet RegisterComponent = class RegisterComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.registerForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      nome: new FormControl(null, [Validators.required]),\n      data_nascimento: new FormControl(null, [Validators.required]),\n      CEP: new FormControl(null, [Validators.required]),\n      endereco: new FormControl(null, [Validators.required]),\n      cidade: new FormControl(null, [Validators.required]),\n      estado: new FormControl(null, [Validators.required]),\n      senha: new FormControl(null, [Validators.required]),\n      passwordConfirm: new FormControl(null, [Validators.required])\n    }, {\n      validators: CustomValidators.passwordsMatching\n    });\n  }\n  register() {\n    if (!this.registerForm.valid) {\n      return;\n    }\n    this.authService.cadastro(this.registerForm.value).subscribe(result => {\n      if (result) alert(result);\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,SAAS,QAAQ,eAAe;AAGzC,SAASC,gBAAgB,QAAQ,qBAAqB;AAO/C,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAgB5BC,YAAoBC,WAA+B,EACzCC,MAAc;IADJ,gBAAW,GAAXD,WAAW;IACrB,WAAM,GAANC,MAAM;IAfhB,iBAAY,GAAG,IAAIR,SAAS,CAAC;MAC3BS,KAAK,EAAE,IAAIR,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACO,KAAK,CAAC,CAAC;MACrEE,IAAI,EAAE,IAAIV,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACQ,QAAQ,CAAC,CAAC;MAClDE,eAAe,EAAE,IAAIX,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACQ,QAAQ,CAAC,CAAC;MAC7DG,GAAG,EAAE,IAAIZ,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACQ,QAAQ,CAAC,CAAC;MACjDI,QAAQ,EAAE,IAAIb,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACQ,QAAQ,CAAC,CAAC;MACtDK,MAAM,EAAE,IAAId,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACQ,QAAQ,CAAC,CAAC;MACpDM,MAAM,EAAE,IAAIf,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACQ,QAAQ,CAAC,CAAC;MACpDO,KAAK,EAAE,IAAIhB,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACQ,QAAQ,CAAC,CAAC;MACnDQ,eAAe,EAAE,IAAIjB,WAAW,CAAC,IAAI,EAAE,CAACC,UAAU,CAACQ,QAAQ,CAAC;KAC7D,EACC;MAAES,UAAU,EAAEf,gBAAgB,CAACgB;IAAiB,CAAE,CACnD;EAG2B;EAE5BC,QAAQ;IACN,IAAI,CAAC,IAAI,CAACC,YAAY,CAACC,KAAK,EAAE;MAC5B;;IAEF,IAAI,CAAChB,WAAW,CAACiB,QAAQ,CAAC,IAAI,CAACF,YAAY,CAACG,KAAK,CAAC,CAACC,SAAS,CAACC,MAAM,IAAG;MACpE,IAAIA,MAAM,EACRC,KAAK,CAACD,MAAM,CAAC;IACjB,CAAC,CAAC;EACJ;CAED;AA7BYtB,iBAAiB,eAL7BF,SAAS,CAAC;EACT0B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACW1B,iBAAiB,CA6B7B;SA7BYA,iBAAiB","names":["FormGroup","FormControl","Validators","Component","CustomValidators","RegisterComponent","constructor","authService","router","email","required","nome","data_nascimento","CEP","endereco","cidade","estado","senha","passwordConfirm","validators","passwordsMatching","register","registerForm","valid","cadastro","value","subscribe","result","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/roiney/work/Pessoal-projects/GEW/app/frontend/src/app/register/register.component.ts"],"sourcesContent":["import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthServiceService } from '../auth-service.service';\nimport { CustomValidators } from '../costum-validator';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  registerForm = new FormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    nome: new FormControl(null, [Validators.required]),\n    data_nascimento: new FormControl(null, [Validators.required]),\n    CEP: new FormControl(null, [Validators.required]),\n    endereco: new FormControl(null, [Validators.required]),\n    cidade: new FormControl(null, [Validators.required]),\n    estado: new FormControl(null, [Validators.required]),\n    senha: new FormControl(null, [Validators.required]),\n    passwordConfirm: new FormControl(null, [Validators.required])\n  },\n    { validators: CustomValidators.passwordsMatching }\n  )\n\n  constructor(private authService: AuthServiceService,\n    private router: Router) { }\n\n  register() {\n    if (!this.registerForm.valid) {\n      return;\n    }\n    this.authService.cadastro(this.registerForm.value).subscribe(result => {\n      if (result)\n        alert(result)\n    });\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}