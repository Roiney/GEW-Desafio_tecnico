{"ast":null,"code":"export class CustomValidators {\n  static passwordsMatching(control) {\n    const password = control.get('senha')?.value;\n    const passwordConfirm = control.get('passwordConfirm')?.value;\n    // Check if passwords are matching. If not then add the error 'passwordsNotMatching: true' to the form\n    if (password === passwordConfirm && password !== null && passwordConfirm !== null) {\n      return null;\n    } else {\n      return {\n        passwordsNotMatching: true\n      };\n    }\n  }\n}","map":{"version":3,"mappings":"AAEA,OAAM,MAAOA,gBAAgB;EAC3B,OAAOC,iBAAiB,CAACC,OAAwB;IAC/C,MAAMC,QAAQ,GAAGD,OAAO,CAACE,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK;IAC5C,MAAMC,eAAe,GAAGJ,OAAO,CAACE,GAAG,CAAC,iBAAiB,CAAC,EAAEC,KAAK;IAE7D;IACA,IAAKF,QAAQ,KAAKG,eAAe,IAAMH,QAAQ,KAAK,IAAI,IAAIG,eAAe,KAAK,IAAK,EAAE;MACrF,OAAO,IAAI;KACZ,MAAM;MACL,OAAO;QAAEC,oBAAoB,EAAE;MAAI,CAAE;;EAEzC","names":["CustomValidators","passwordsMatching","control","password","get","value","passwordConfirm","passwordsNotMatching"],"sourceRoot":"","sources":["/home/roiney/work/Pessoal-projects/GEW/app/frontend/src/app/costum-validator.ts"],"sourcesContent":["import { AbstractControl, ValidationErrors } from \"@angular/forms\";\n\nexport class CustomValidators {\n  static passwordsMatching(control: AbstractControl): ValidationErrors | null {\n    const password = control.get('senha')?.value;\n    const passwordConfirm = control.get('passwordConfirm')?.value;\n\n    // Check if passwords are matching. If not then add the error 'passwordsNotMatching: true' to the form\n    if ((password === passwordConfirm) && (password !== null && passwordConfirm !== null)) {\n      return null;\n    } else {\n      return { passwordsNotMatching: true };\n    }\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}