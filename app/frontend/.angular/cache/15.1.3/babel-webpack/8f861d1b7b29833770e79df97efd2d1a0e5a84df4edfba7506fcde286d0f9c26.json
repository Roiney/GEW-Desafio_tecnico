{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CustomValidators } from '../costum-validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/material/datepicker\";\nimport * as i11 from \"angular-imask\";\nfunction RegisterComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Um email deve ser informado!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Um email v\\u00E1lido deve ser informado!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" O nome completo deve ser informado!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" A data de Nascimento deve ser informada!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" O CEP deve ser informado!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" O endere\\u00E7o completo deve ser informado!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" A cidade deve ser informado!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" A cidade deve ser informado!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Uma senha deve ser informada!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Confirme sua senha!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Passwords are not matching!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.registerForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      nome: new FormControl(null, [Validators.required]),\n      data_nascimento: new FormControl(null, [Validators.required]),\n      CEP: new FormControl(null, [Validators.required]),\n      endereco: new FormControl(null, [Validators.required]),\n      cidade: new FormControl(null, [Validators.required]),\n      estado: new FormControl(null, [Validators.required]),\n      senha: new FormControl(null, [Validators.required]),\n      passwordConfirm: new FormControl(null, [Validators.required])\n    }, {\n      validators: CustomValidators.passwordsMatching\n    });\n    this.cepMask = {\n      mask: \"00000-000\"\n    };\n  }\n  register() {\n    if (!this.registerForm.valid) {\n      return;\n    }\n    this.authService.cadastro(this.registerForm.value).subscribe(result => {\n      if (result) alert(result);\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthServiceService), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 46,\n  vars: 17,\n  consts: [[\"mat-raised-button\", \"\", 3, \"routerLink\"], [\"fxLayoutAlign\", \"center center\", \"fxFlexFill\", \"\", 1, \"main-div\"], [\"fxFlex\", \"25\"], [\"fxFlex\", \"100\", \"fxFlexOffset\", \"10\", \"fxLayoutAlign\", \"center center\"], [1, \"main-div\"], [\"fxLayoutAlign\", \"street\", \"fxLayout\", \"column\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"matInput\", \"\", \"placeholder\", \"Email\", \"formControlName\", \"email\"], [4, \"ngIf\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Nome Completo\", \"formControlName\", \"nome\"], [\"matInput\", \"\", \"formControlName\", \"data_nascimento\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"matInput\", \"\", \"placeholder\", \"CEP\", \"formControlName\", \"CEP\", \"value\", \"00000-00\", 3, \"imask\"], [\"matInput\", \"\", \"placeholder\", \"endereco\", \"formControlName\", \"endereco\"], [\"matInput\", \"\", \"placeholder\", \"cidade\", \"formControlName\", \"cidade\"], [\"matInput\", \"\", \"placeholder\", \"estado\", \"formControlName\", \"estado\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"senha\", \"formControlName\", \"senha\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Confirme sua Senha\", \"formControlName\", \"passwordConfirm\"], [1, \"button\"], [\"type\", \"submit\", \"mat-button\", \"\", 3, \"disabled\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵtext(1, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"mat-card\", 2)(4, \"mat-card-title\", 3);\n      i0.ɵɵtext(5, \"Registro de Novos Usu\\u00E1rios\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"mat-card-content\")(8, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(9, \"mat-form-field\");\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵtemplate(11, RegisterComponent_mat_error_11_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵtemplate(12, RegisterComponent_mat_error_12_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"mat-form-field\");\n      i0.ɵɵelement(14, \"input\", 8);\n      i0.ɵɵtemplate(15, RegisterComponent_mat_error_15_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"mat-form-field\")(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Data de Nascimento\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 9)(20, \"mat-datepicker-toggle\", 10)(21, \"mat-datepicker\", null, 11);\n      i0.ɵɵtemplate(23, RegisterComponent_mat_error_23_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"mat-form-field\");\n      i0.ɵɵelement(25, \"input\", 12);\n      i0.ɵɵtemplate(26, RegisterComponent_mat_error_26_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"mat-form-field\");\n      i0.ɵɵelement(28, \"input\", 13);\n      i0.ɵɵtemplate(29, RegisterComponent_mat_error_29_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"mat-form-field\");\n      i0.ɵɵelement(31, \"input\", 14);\n      i0.ɵɵtemplate(32, RegisterComponent_mat_error_32_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"mat-form-field\");\n      i0.ɵɵelement(34, \"input\", 15);\n      i0.ɵɵtemplate(35, RegisterComponent_mat_error_35_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"mat-form-field\");\n      i0.ɵɵelement(37, \"input\", 16);\n      i0.ɵɵtemplate(38, RegisterComponent_mat_error_38_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"mat-form-field\");\n      i0.ɵɵelement(40, \"input\", 17);\n      i0.ɵɵtemplate(41, RegisterComponent_mat_error_41_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(42, RegisterComponent_mat_error_42_Template, 2, 0, \"mat-error\", 7);\n      i0.ɵɵelementStart(43, \"div\", 18)(44, \"button\", 19);\n      i0.ɵɵtext(45, \"Register\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(22);\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_7_0;\n      let tmp_9_0;\n      let tmp_10_0;\n      let tmp_11_0;\n      let tmp_12_0;\n      let tmp_13_0;\n      let tmp_14_0;\n      let tmp_15_0;\n      i0.ɵɵproperty(\"routerLink\", \"\");\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_2_0.touched) && ((tmp_2_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_2_0.hasError(\"required\")));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_3_0.touched) && ((tmp_3_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_3_0.hasError(\"email\")));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.registerForm.get(\"nome\")) == null ? null : tmp_4_0.touched) && ((tmp_4_0 = ctx.registerForm.get(\"nome\")) == null ? null : tmp_4_0.hasError(\"required\")));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"matDatepicker\", _r3);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"for\", _r3);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.registerForm.get(\"data_nascimento\")) == null ? null : tmp_7_0.touched) && ((tmp_7_0 = ctx.registerForm.get(\"data_nascimento\")) == null ? null : tmp_7_0.hasError(\"required\")));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"imask\", ctx.cepMask);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_9_0 = ctx.registerForm.get(\"CEP\")) == null ? null : tmp_9_0.touched) && ((tmp_9_0 = ctx.registerForm.get(\"CEP\")) == null ? null : tmp_9_0.hasError(\"required\")));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_10_0 = ctx.registerForm.get(\"endereco\")) == null ? null : tmp_10_0.touched) && ((tmp_10_0 = ctx.registerForm.get(\"endereco\")) == null ? null : tmp_10_0.hasError(\"required\")));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_11_0 = ctx.registerForm.get(\"cidade\")) == null ? null : tmp_11_0.touched) && ((tmp_11_0 = ctx.registerForm.get(\"cidade\")) == null ? null : tmp_11_0.hasError(\"required\")));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_12_0 = ctx.registerForm.get(\"estado\")) == null ? null : tmp_12_0.touched) && ((tmp_12_0 = ctx.registerForm.get(\"estado\")) == null ? null : tmp_12_0.hasError(\"required\")));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_13_0 = ctx.registerForm.get(\"senha\")) == null ? null : tmp_13_0.touched) && ((tmp_13_0 = ctx.registerForm.get(\"senha\")) == null ? null : tmp_13_0.hasError(\"required\")));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_14_0 = ctx.registerForm.get(\"passwordConfirm\")) == null ? null : tmp_14_0.touched) && ((tmp_14_0 = ctx.registerForm.get(\"passwordConfirm\")) == null ? null : tmp_14_0.hasError(\"required\")));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_15_0 = ctx.registerForm.get(\"passwordConfirm\")) == null ? null : tmp_15_0.dirty) && ctx.registerForm.hasError(\"passwordsNotMatching\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n    }\n  },\n  dependencies: [i3.NgIf, i2.RouterLink, i4.DefaultLayoutDirective, i4.DefaultLayoutAlignDirective, i4.DefaultFlexOffsetDirective, i4.FlexFillDirective, i4.DefaultFlexDirective, i5.MatFormField, i5.MatLabel, i5.MatError, i5.MatSuffix, i6.MatInput, i7.MatButton, i8.MatCard, i8.MatCardContent, i8.MatCardTitle, i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.FormGroupDirective, i9.FormControlName, i10.MatDatepicker, i10.MatDatepickerInput, i10.MatDatepickerToggle, i11.IMaskDirective],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","CustomValidators","i0","RegisterComponent","constructor","authService","router","email","required","nome","data_nascimento","CEP","endereco","cidade","estado","senha","passwordConfirm","validators","passwordsMatching","mask","register","registerForm","valid","cadastro","value","subscribe","result","alert","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/roiney/work/Pessoal-projects/GEW/app/frontend/src/app/register/register.component.ts","/home/roiney/work/Pessoal-projects/GEW/app/frontend/src/app/register/register.component.html"],"sourcesContent":["import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthServiceService } from '../auth-service.service';\nimport { CustomValidators } from '../costum-validator';\nimport IMask from 'imask';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  registerForm = new FormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    nome: new FormControl(null, [Validators.required]),\n    data_nascimento: new FormControl(null, [Validators.required]),\n    CEP: new FormControl(null, [Validators.required]),\n    endereco: new FormControl(null, [Validators.required]),\n    cidade: new FormControl(null, [Validators.required]),\n    estado: new FormControl(null, [Validators.required]),\n    senha: new FormControl(null, [Validators.required]),\n    passwordConfirm: new FormControl(null, [Validators.required])\n  },\n    { validators: CustomValidators.passwordsMatching }\n  )\n\n  constructor(private authService: AuthServiceService,\n    private router: Router) { }\n\n    cepMask = { mask: \"00000-000\"}\n\n  register() {\n    if (!this.registerForm.valid) {\n      return;\n    }\n    this.authService.cadastro(this.registerForm.value).subscribe(result => {\n      if (result)\n        alert(result)\n    });\n  }\n\n}","<button mat-raised-button [routerLink]=\"''\">Login</button>\n\n<div fxLayoutAlign=\"center center\" fxFlexFill class=\"main-div\">\n  <mat-card fxFlex=\"25\">\n    <mat-card-title fxFlex=\"100\" fxFlexOffset=\"10\" fxLayoutAlign=\"center center\">Registro de Novos\n      Usuários</mat-card-title>\n    <div class=\"main-div\">\n      <mat-card-content>\n        <form fxLayoutAlign=\"street\" fxLayout=\"column\" [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n\n\n          <mat-form-field>\n            <input type=\"email\" matInput placeholder=\"Email\" formControlName=\"email\">\n            <mat-error\n              *ngIf=\"this.registerForm.get('email')?.touched && this.registerForm.get('email')?.hasError('required')\">\n              Um email deve ser informado!</mat-error>\n            <mat-error\n              *ngIf=\"this.registerForm.get('email')?.touched && this.registerForm.get('email')?.hasError('email')\">\n              Um email válido deve ser informado!</mat-error>\n          </mat-form-field>\n\n\n\n          <mat-form-field>\n            <input type=\"text\" matInput placeholder=\"Nome Completo\" formControlName=\"nome\">\n            <mat-error\n              *ngIf=\"this.registerForm.get('nome')?.touched && this.registerForm.get('nome')?.hasError('required')\">\n              O nome completo deve ser informado!</mat-error>\n          </mat-form-field>\n\n\n\n          <mat-form-field>\n            <mat-label>Data de Nascimento</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"data_nascimento\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error\n              *ngIf=\"this.registerForm.get('data_nascimento')?.touched && this.registerForm.get('data_nascimento')?.hasError('required')\">\n              A data de Nascimento deve ser informada!</mat-error>\n          </mat-form-field>\n\n\n\n          <mat-form-field>\n            <input matInput [imask]=\"cepMask\" placeholder=\"CEP\" formControlName=\"CEP\" value=\"00000-00\">\n            <mat-error\n              *ngIf=\"this.registerForm.get('CEP')?.touched && this.registerForm.get('CEP')?.hasError('required')\">\n              O CEP deve ser informado!</mat-error>\n          </mat-form-field>\n\n\n\n          <mat-form-field>\n            <input matInput placeholder=\"endereco\" formControlName=\"endereco\">\n            <mat-error\n              *ngIf=\"this.registerForm.get('endereco')?.touched && this.registerForm.get('endereco')?.hasError('required')\">\n              O endereço completo deve ser informado!</mat-error>\n          </mat-form-field>\n\n\n\n          <mat-form-field>\n            <input matInput placeholder=\"cidade\" formControlName=\"cidade\">\n            <mat-error\n              *ngIf=\"this.registerForm.get('cidade')?.touched && this.registerForm.get('cidade')?.hasError('required')\">\n              A cidade deve ser informado!</mat-error>\n          </mat-form-field>\n\n\n\n          <mat-form-field>\n            <input matInput placeholder=\"estado\" formControlName=\"estado\">\n            <mat-error\n              *ngIf=\"this.registerForm.get('estado')?.touched && this.registerForm.get('estado')?.hasError('required')\">\n              A cidade deve ser informado!</mat-error>\n          </mat-form-field>\n\n\n\n          <mat-form-field>\n            <input type=\"password\" matInput placeholder=\"senha\" formControlName=\"senha\">\n            <mat-error\n              *ngIf=\"this.registerForm.get('senha')?.touched && this.registerForm.get('senha')?.hasError('required')\">\n              Uma senha deve ser informada!</mat-error>\n          </mat-form-field>\n\n\n\n          <mat-form-field>\n            <input type=\"password\" matInput placeholder=\"Confirme sua Senha\" formControlName=\"passwordConfirm\">\n            <mat-error\n              *ngIf=\"this.registerForm.get('passwordConfirm')?.touched && this.registerForm.get('passwordConfirm')?.hasError('required')\">\n              Confirme sua senha!</mat-error>\n          </mat-form-field>\n          <mat-error\n            *ngIf=\"this.registerForm.get('passwordConfirm')?.dirty && this.registerForm.hasError('passwordsNotMatching')\">\n            Passwords are not matching!</mat-error>\n\n\n          <div class=\"button\">\n            <button type=\"submit\" mat-button [disabled]=\"!registerForm.valid\">Register</button>\n          </div>\n\n        </form>\n      </mat-card-content>\n    </div>\n\n  </mat-card>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}